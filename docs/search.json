[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 GitStats authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/GitStats.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"Introduction to gitstats","text":"can start creating gitstats object, hold information multiple connections.","code":"library(gitstats) library(magrittr)  git_stats <- create_gitstats() %>%   set_connection(     api_url = \"https://api.github.com\",     token = Sys.getenv(\"GITHUB_PAT\"),     orgs = c(\"r-world-devs\", \"openpharma\", \"pharmaverse\")   ) %>%   set_connection(     api_url = \"https://gitlab.com/api/v4\",     token = Sys.getenv(\"GITLAB_PAT\"),     orgs = c(\"mbtests\", \"erasmusmc-public-health\")   )  #> ✔ Set connection to GitHub. #> ✔ Set connection to GitLab."},{"path":"/articles/GitStats.html","id":"setup-preferences","dir":"Articles","previous_headings":"","what":"Setup preferences","title":"Introduction to gitstats","text":"can setup search preferences, either organizations, team phrase.","code":""},{"path":"/articles/GitStats.html","id":"team","dir":"Articles","previous_headings":"Setup preferences","what":"Team","title":"Introduction to gitstats","text":"setup preferences team, name , add team members:","code":"setup_preferences(git_stats,                   search_param = \"team\",                   team_name = \"RWD\") #> ✔ Your search preferences set to team: RWD. #> ! No team members in the team. Add them with `add_team_member()`. #> A <gitstats> object for 2 clients: #> Clients: https://api.github.com, https://gitlab.com/api/v4 #> Organisations: r-world-devs, openpharma, pharmaverse, mbtests, erasmusmc-public-health #> Search preference: team #> Team: RWD (0 members) #> Phrase: <not defined> #> Language: <not defined> #> Storage: <not defined> #> Storage On/Off: OFF  # set your team members git_stats %>%   add_team_member(\"Adam Foryś\", \"galachad\") %>%   add_team_member(\"Kamil Wais\", \"kalimu\") %>%   add_team_member(\"Krystian Igras\", \"krystian8207\") %>%   add_team_member(\"Karolina Marcinkowska\", \"marcinkowskak\") %>%   add_team_member(\"Kamil Koziej\", \"Cotau\") %>%   add_team_member(\"Maciej Banaś\", \"maciekbanas\") #> ✔ Adam Foryś successfully added to team. #> ✔ Kamil Wais successfully added to team. #> ✔ Krystian Igras successfully added to team. #> ✔ Karolina Marcinkowska successfully added to team. #> ✔ Kamil Koziej successfully added to team. #> ✔ Maciej Banaś successfully added to team.  # check your settings git_stats #> A <gitstats> object for 2 clients: #> Clients: https://api.github.com, https://gitlab.com/api/v4 #> Organisations: r-world-devs, openpharma, pharmaverse, mbtests, erasmusmc-public-health #> Search preference: team #> Team: RWD (6 members) #> Phrase: <not defined> #> Language: <not defined> #> Storage: <not defined> #> Storage On/Off: OFF  # now pull repos by default by team get_repos(git_stats) #> ℹ [GitHub Public][r-world-devs] Pulling repositories... #> ℹ Number of repositories: 7 #> ℹ Filtering by team members. #> ℹ [GitHub Public][openpharma] Pulling repositories... #> ℹ Number of repositories: 42 #> ℹ Filtering by team members. #> ℹ [GitHub Public][pharmaverse] Pulling repositories... #> ℹ Number of repositories: 30 #> ℹ Filtering by team members. #> ℹ [GitLab][mbtests] Pulling repositories... #> ℹ Number of repositories: 6 #> ℹ Filtering by team members. #> ℹ [GitLab][erasmusmc-public-health] Pulling repositories... #> ℹ Number of repositories: 21 #> ℹ Filtering by team members. #> Rows: 6 #> Columns: 13 #> $ id               <chr> \"R_kgDOHYNxtw\", \"MDEwOlJlcG9zaXRvcnkyMzQ3NTUwNjQ=\", \"… #> $ name             <chr> \"cohortBuilder.db\", \"RDO\", \"facetsr\", \"shinyTimelines… #> $ stars            <int> 0, 9, 4, 2, 1, 0 #> $ forks            <int> 0, 1, 0, 0, 0, 0 #> $ created_at       <chr> \"2022-05-22T19:11:32Z\", \"2020-01-18T15:28:03Z\", \"2020… #> $ last_push        <chr> \"2022-07-29T10:16:22Z\", \"2020-03-09T14:00:55Z\", \"2020… #> $ last_activity_at <chr> \"2022-05-22T19:13:25Z\", \"2022-08-08T22:53:33Z\", \"2022… #> $ languages        <chr> \"R\", \"R\", \"R, JavaScript, CSS\", \"R, CSS\", \"R\", \"\" #> $ issues_open      <int> 3, 0, 1, 0, 55, 0 #> $ issues_closed    <int> 0, 0, 0, 0, 61, 0 #> $ contributors     <list> \"krystian8207\", \"kalimu\", \"galachad\", \"krystian8207\",… #> $ organization     <chr> \"r-world-devs\", \"openpharma\", \"openpharma\", \"r-world-… #> $ api_url          <chr> \"https://api.github.com\", \"https://api.github.com\", \"…"},{"path":"/articles/GitStats.html","id":"keyword","dir":"Articles","previous_headings":"Setup preferences","what":"Keyword","title":"Introduction to gitstats","text":"gitstats can look activity connected certain phrase.","code":"setup_preferences(git_stats,                   search_param = \"phrase\",                   phrase = \"covid\") #> ✔ Your search preferences set to phrase: covid. #> A <gitstats> object for 2 clients: #> Clients: https://api.github.com, https://gitlab.com/api/v4 #> Organisations: r-world-devs, openpharma, pharmaverse, mbtests, erasmusmc-public-health #> Search preference: phrase #> Team: RWD (6 members) #> Phrase: covid #> Language: <not defined> #> Storage: <not defined> #> Storage On/Off: OFF  # now pull repos by default by phrase get_repos(git_stats) #> ✔ On GitHub [r-world-devs] found 1 repositories. #> ✔ On GitHub [openpharma] found 3 repositories. #> ✔ On GitHub [pharmaverse] found 3 repositories. #> ✔ On GitLab [mbtests] found 0 repositories. #> ✔ On GitLab [erasmusmc-public-health] found 1 repositories. #> Rows: 8 #> Columns: 11 #> $ organization     <chr> \"pharmaverse\", \"openpharma\", \"openpharma\", \"r-world-d… #> $ name             <chr> \"admiral\", \"visR\", \"workshop-r-swe\", \"gitstats\", \"pha… #> $ id               <int> 349132982, 208896481, 601307131, 586903986, 396118006… #> $ created_at       <dttm> 2021-03-18, 2019-09-16, 2023-02-13, 2023-01-09, 2021… #> $ last_activity_at <drtn> 1.52 days, 4.52 days, 4.52 days, 6.52 days, 11.52 da… #> $ forks            <chr> \"35\", \"31\", \"2\", \"0\", \"3\", \"1\", \"1\", \"\" #> $ stars            <int> 135, 174, 8, 1, 13, 13, 3, 0 #> $ contributors     <chr> \"bundfussr,thomas-neitmann,bms63,rossfarrugia,millerg… #> $ issues_open      <dbl> 30, 30, 3, 30, 22, 10, 0, 0 #> $ issues_closed    <dbl> 0, 0, 0, 0, 0, 0, 0, 0 #> $ api_url          <chr> \"https://api.github.com\", \"https://api.github.com\", \"…"},{"path":"/articles/gitstats_workflow.html","id":"repositories-workflow","dir":"Articles","previous_headings":"","what":"Repositories workflow","title":"GitStats workflow","text":"default search preferences set organizations (org), means GitStats pull repositories organizations specified set_host(). can add repositories information contributors. pulled data can retrieve stats . just retrieve output. Finally, can plot statistics. default last_activity plotted 10 repositories.  , can change column, also can choose number repositories.  work interactive app, can use plotly_mode.","code":"pull_repos(git_stats) #> ℹ [GitHub][Engine:GraphQL][org:r-world-devs] Pulling repositories... #> ℹ [GitHub][Engine:GraphQL][org:openpharma] Pulling repositories... #> ℹ [GitLab][Engine:GraphQL][org:mbtests] Pulling repositories... #> Rows: 65 #> Columns: 12 #> $ id               <chr> \"R_kgDOHNMr2w\", \"R_kgDOHYNOFQ\", \"R_kgDOHYNrJw\", \"R_kg… #> $ name             <chr> \"shinyGizmo\", \"cohortBuilder\", \"shinyCohortBuilder\", … #> $ stars            <int> 18, 3, 5, 0, 1, 3, 0, 2, 7, 178, 4, 10, 1, 19, 0, 1, … #> $ forks            <int> 0, 2, 0, 0, 0, 0, 0, 0, 4, 31, 1, 1, 0, 4, 1, 1, 0, 0… #> $ created_at       <dttm> 2022-04-20 10:04:32, 2022-05-22 18:31:55, 2022-05-22… #> $ last_activity_at <dttm> 2023-05-08, 2023-05-05, 2023-09-29, 2022-07-29, 2023… #> $ languages        <chr> \"R, CSS, JavaScript\", \"R\", \"R, CSS, JavaScript, SCSS\"… #> $ issues_open      <int> 6, 22, 32, 3, 71, 0, 0, 3, 6, 16, 0, 0, 0, 4, 0, 0, 0… #> $ issues_closed    <int> 12, 1, 4, 0, 131, 0, 0, 0, 1, 167, 0, 0, 0, 16, 0, 0,… #> $ organization     <chr> \"r-world-devs\", \"r-world-devs\", \"r-world-devs\", \"r-wo… #> $ repo_url         <chr> \"https://github.com/r-world-devs/shinyGizmo\", \"https:… #> $ api_url          <chr> \"https://api.github.com/repos/r-world-devs/shinyGizmo… pull_repos_contributors(git_stats) #> ℹ [GitHub][Engine:REST][org:r-world-devs and openpharma] Pulling contributors... #> ℹ [GitLab][Engine:REST][org:MB Tests] Pulling contributors... repos_stats <- get_repos_stats(git_stats) head(repos_stats) #>                        repository platform          created_at last_activity #> 1         r-world-devs/shinyGizmo   github 2022-04-20 10:04:32    144.5 days #> 2      r-world-devs/cohortBuilder   github 2022-05-22 18:31:55    147.5 days #> 3 r-world-devs/shinyCohortBuilder   github 2022-05-22 19:04:12      0.5 days #> 4   r-world-devs/cohortBuilder.db   github 2022-05-22 19:11:32    427.5 days #> 5           r-world-devs/GitStats   github 2023-01-09 14:02:20      0.5 days #> 6     r-world-devs/shinyTimelines   github 2023-02-21 16:41:59    147.5 days #>   stars forks                languages issues_open issues_closed contributors_n #> 1    18     0       R, CSS, JavaScript           6            12              4 #> 2     3     2                        R          22             1              2 #> 3     5     0 R, CSS, JavaScript, SCSS          32             4              2 #> 4     0     0                        R           3             0              1 #> 5     1     0                        R          71           131              2 #> 6     3     0                   R, CSS           0             0              1 repos <- get_repos(git_stats) gitstats_plot(repos_stats) gitstats_plot(   stats_table = repos_stats,   value_to_plot = \"contributors_n\",   value_decreasing = FALSE,   n = 60 ) gitstats_plot(repos_stats, plotly_mode = TRUE)"},{"path":"/articles/gitstats_workflow.html","id":"commits-workflow","dir":"Articles","previous_headings":"","what":"Commits workflow","title":"GitStats workflow","text":"basically similar repositories one, specify additionally least date_from parameter.  can pull stats week day.  can also retrieve just pulled output.","code":"pull_commits(   gitstats_obj = git_stats,   date_from = \"2022-01-01\",   date_until = \"2023-08-31\" ) %>%    get_commits_stats() %>%    gitstats_plot() #> Rows: 2,532 #> Columns: 8 #> $ id             <chr> \"C_kwDOHNMr29oAKDczNWVjNmVhMzY3ZTZmOTg1NmViMGZlNjUwZDNj… #> $ committed_date <dttm> 2023-05-08 09:43:31, 2023-04-28 12:30:40, 2023-03-01 1… #> $ author         <chr> \"Krystian Igras\", \"Kamil Koziej\", \"Krystian Igras\", \"Kr… #> $ additions      <int> 18, 18, 296, 18, 10, 29, 8, 17, 1, 11, 267, 876, 1, 6, … #> $ deletions      <int> 0, 0, 153, 11, 7, 14, 4, 8, 1, 5, 146, 146, 1, 4, 3, 9,… #> $ repository     <chr> \"shinyGizmo\", \"shinyGizmo\", \"shinyGizmo\", \"shinyGizmo\",… #> $ organization   <chr> \"r-world-devs\", \"r-world-devs\", \"r-world-devs\", \"r-worl… #> $ api_url        <chr> \"https://api.github.com\", \"https://api.github.com\", \"ht… get_commits_stats(   gitstats_obj = git_stats,   time_interval = \"week\" ) %>%    gitstats_plot() commits <- get_commits(git_stats) head(commits) #>                                                                       id #> 1: C_kwDOHNMr29oAKDczNWVjNmVhMzY3ZTZmOTg1NmViMGZlNjUwZDNjNTFjM2ExYWVmYjU #> 2: C_kwDOHNMr29oAKDU3MDY0MmE1NmIyMDNmYTQ0YmZiZDYxZDU5OTEyM2ZhZTZlZDhkZDg #> 3: C_kwDOHNMr29oAKGI3ZmRlYTNkNjY0NmM2MmRmMzA0N2Y0NDhkODQyY2ZkYjI2MjIyNWU #> 4: C_kwDOHNMr29oAKDQ5MGQ3Yzc0MjVjYTYwMDc5YTJkMTA0MTQ2NWRlZGU2ZTI2YzA1YmI #> 5: C_kwDOHNMr29oAKGJmYzhkZWU1MThjZDY4ODdjNjRiYWE4ODc5NTVhNjI5Y2RkMTg0NDQ #> 6: C_kwDOHNMr29oAKGMxNjZmYzljMWNiZTYwN2M2MzEzMmU0OWVkMjBiODYwYjNlYzYxZGE #>         committed_date         author additions deletions repository #> 1: 2023-05-08 09:43:31 Krystian Igras        18         0 shinyGizmo #> 2: 2023-04-28 12:30:40   Kamil Koziej        18         0 shinyGizmo #> 3: 2023-03-01 15:05:10 Krystian Igras       296       153 shinyGizmo #> 4: 2023-03-01 14:58:22 Krystian Igras        18        11 shinyGizmo #> 5: 2023-02-28 16:46:59 Krystian Igras        10         7 shinyGizmo #> 6: 2023-02-28 13:33:40 Krystian Igras        29        14 shinyGizmo #>    organization                api_url #> 1: r-world-devs https://api.github.com #> 2: r-world-devs https://api.github.com #> 3: r-world-devs https://api.github.com #> 4: r-world-devs https://api.github.com #> 5: r-world-devs https://api.github.com #> 6: r-world-devs https://api.github.com"},{"path":"/articles/gitstats_workflow.html","id":"set","dir":"Articles","previous_headings":"","what":"Set","title":"GitStats workflow","text":"can setup search preferences, either org, team phrase. settings can also set language silence output.","code":"set_params(   gitstats_obj = git_stats,   print_out = FALSE ) #> A <GitStats> object for 2 hosts: #> Hosts: https://api.github.com, https://gitlab.com/api/v4 #> Organisations: [3] r-world-devs, openpharma, mbtests #> Search preference: org #> Team: <not defined> #> Phrase: <not defined> #> Language: All #> Repositories output: Rows number: 65 #> Commits output: Since: 2022-01-02 19:01:33; Until: 2023-08-30 20:01:23; Rows number: 2532"},{"path":"/articles/gitstats_workflow.html","id":"team","dir":"Articles","previous_headings":"Set","what":"Team","title":"GitStats workflow","text":"wish setup search parameter team, add team members first: another logins git platform, pass separately, e.g. set_team_member(\"Maciej Banas\", \"maciekbanas\", \"banasm\"). set parameters accordingly. Pull repositories commits finally.","code":"git_stats %>%   set_team_member(\"Kamil Wais\", \"kalimu\") %>%   set_team_member(\"Krystian Igras\", \"krystian8207\") %>%   set_team_member(\"Karolina Marcinkowska\", \"marcinkowskak\") %>%   set_team_member(\"Kamil Koziej\", \"Cotau\") %>%   set_team_member(\"Maciej Banaś\", \"maciekbanas\") #> ✔ Kamil Wais successfully added to team. #> ✔ Krystian Igras successfully added to team. #> ✔ Karolina Marcinkowska successfully added to team. #> ✔ Kamil Koziej successfully added to team. #> ✔ Maciej Banaś successfully added to team. set_params(   gitstats_obj = git_stats,   search_param = \"team\",   team_name = \"RWD\",   print_out = FALSE )  #> ✔ Your search preferences set to team: RWD. #> A <GitStats> object for 2 hosts: #> Hosts: https://api.github.com, https://gitlab.com/api/v4 #> Organisations: [3] r-world-devs, openpharma, mbtests #> Search preference: team #> Team: RWD (5 members) #> Phrase: <not defined> #> Language: All #> Repositories output: Rows number: 65 #> Commits output: Since: 2022-01-02 19:01:33; Until: 2023-08-30 20:01:23; Rows number: 2532 pull_repos(git_stats) %>%    get_repos_stats() %>%    gitstats_plot() #> ℹ [GitHub][Engine:GraphQL][org:r-world-devs][team:RWD] Pulling repositories... #> ℹ [GitHub][Engine:GraphQL][org:openpharma][team:RWD] Pulling repositories... #> ℹ [GitHub][Engine:REST][org:r-world-devs and openpharma] Pulling contributors... #> ℹ [GitLab][Engine:REST][org:mbtests][team:RWD] Pulling repositories... #> ℹ [GitLab][Engine:REST][org:mbtests] Pulling contributors... pull_commits(   gitstats_obj = git_stats,   date_from = \"2022-01-01\",   date_until = \"2023-08-31\" ) %>%    get_commits_stats() %>%    gitstats_plot()"},{"path":"/articles/gitstats_workflow.html","id":"phrase","dir":"Articles","previous_headings":"Set","what":"Phrase","title":"GitStats workflow","text":"GitStats can look repos certain phrase code blobs (can commits!).","code":"repos_stats <- set_params(   gitstats_obj = git_stats,   search_param = \"phrase\",   phrase = \"shiny\",   print_out = FALSE ) %>%    pull_repos() %>%    get_repos_stats() #> ✔ Your search preferences set to phrase: shiny. #> ℹ [GitHub][Engine:REST][phrase:shiny][org:r-world-devs] Searching repositories... #> ℹ [GitHub][Engine:REST][phrase:shiny][org:openpharma] Searching repositories... #> ℹ [GitLab][Engine:REST][phrase:shiny][org:mbtests] Searching repositories...  head(repos_stats) #>                         repository platform          created_at last_activity #> 1: r-world-devs/shinyCohortBuilder   github 2022-05-22 19:04:12     0.10 days #> 2:           r-world-devs/GitStats   github 2023-01-09 14:02:20     0.05 days #> 3:           openpharma/elaborator   github 2021-11-24 06:53:27   594.95 days #> 4:        openpharma/openpharma_ml   github 2022-07-11 13:19:59   139.95 days #>    stars forks languages issues_open issues_closed contributors_n #> 1:     5     0         R          30             0             NA #> 2:     1     0         R          30             0             NA #> 3:     2     0         R           0             0             NA #> 4:     0     0    Python           0             0             NA"},{"path":"/articles/gitstats_workflow.html","id":"language","dir":"Articles","previous_headings":"Set","what":"Language","title":"GitStats workflow","text":"can define programming language settings. can always get back languages.","code":"repos_stats <- set_params(   gitstats_obj = git_stats,   search_param = \"org\",   language = \"JavaScript\",   print_out = FALSE ) %>%    pull_repos() %>%    get_repos_stats() #> ✔ Your programming language is set to JavaScript. #> ℹ [GitHub][Engine:GraphQL][org:r-world-devs] Pulling repositories... #> ℹ [GitHub][Engine:GraphQL][org:openpharma] Pulling repositories... #> ℹ Filtering by language. #> ℹ [GitLab][Engine:GraphQL][org:mbtests] Pulling repositories... #> ℹ Filtering by language. head(repos_stats) #>                        repository platform          created_at last_activity #> 1         r-world-devs/shinyGizmo   github 2022-04-20 10:04:32   144.51 days #> 2 r-world-devs/shinyCohortBuilder   github 2022-05-22 19:04:12     0.51 days #> 3         r-world-devs/hypothesis   github 2023-04-13 13:52:24    72.51 days #> 4              openpharma/facetsr   github 2020-11-26 13:56:52  1033.51 days #> 5        openpharma/phuse-scripts   github 2022-06-09 14:27:07   463.51 days #> 6           openpharma/autoquarto   github 2023-02-02 14:59:57    99.51 days #>   stars forks                        languages issues_open issues_closed #> 1    18     0               R, CSS, JavaScript           6            12 #> 2     5     0         R, CSS, JavaScript, SCSS          32             4 #> 3     2     0                    R, JavaScript           3             0 #> 4     4     0               R, JavaScript, CSS           1             0 #> 5     0     0 JavaScript, Perl, R, Julia, XSLT           0             0 #> 6     3     0              R, HTML, JavaScript           2             2 #>   contributors_n #> 1             NA #> 2             NA #> 3             NA #> 4             NA #> 5             NA #> 6             NA reset_language(git_stats) #> ℹ Setting language parameter to 'All'. #> A <GitStats> object for 2 hosts: #> Hosts: https://api.github.com, https://gitlab.com/api/v4 #> Organisations: [3] r-world-devs, openpharma, mbtests #> Search preference: org #> Team: RWD (5 members) #> Phrase: shiny #> Language: All #> Repositories output: Rows number: 6 #> Commits output: Since: 2022-01-20 14:57:56; Until: 2023-08-28 08:12:15; Rows number: 727"},{"path":"/articles/gitstats_workflow.html","id":"users","dir":"Articles","previous_headings":"","what":"Users","title":"GitStats workflow","text":"can retrieve data users GitStats.","code":"pull_users(   gitstats_obj = git_stats,   users = c(\"maciekbanas\", \"kalimu\", \"Cotau\", \"marcinkowskak\", \"krystian8207\") ) %>%    get_users() #> # A tibble: 8 × 12 #>   id       name  login email location starred_repos commits issues pull_requests #>   <chr>    <chr> <chr> <chr> <chr>            <int>   <int>  <int>         <int> #> 1 MDQ6VXN… \"Mac… maci… \"\"    \"\"                  15     435    209           102 #> 2 MDQ6VXN… \"Kam… kali… \"kam… \"Rzeszó…            80       0      0             1 #> 3 MDQ6VXN… \"\"    Cotau \"\"    \"\"                   1       1      2             6 #> 4 MDQ6VXN… \"Kar… marc… \"\"    \"Warsaw…             0       0      1             2 #> 5 MDQ6VXN… \"Kry… krys… \"kry… \"Warsaw\"            26     254    106            43 #> 6 gid://g… \"Mac… maci… \"\"    \"\"                   0      NA     NA             1 #> 7 gid://g… \"Kam… Cotau \"\"    \"\"                   0      NA     NA             0 #> 8 gid://g… \"Kar… marc… \"\"    \"\"                   0      NA     NA             0 #> # … with 3 more variables: reviews <int>, avatar_url <chr>, web_url <chr>"},{"path":"/articles/gitstats_workflow.html","id":"reset-your-settings","dir":"Articles","previous_headings":"","what":"Reset your settings","title":"GitStats workflow","text":"wish get back default settings, run:","code":"reset(git_stats) #> ℹ Reset settings to default. #> A <GitStats> object for 2 hosts: #> Hosts: https://api.github.com, https://gitlab.com/api/v4 #> Organisations: [3] r-world-devs, openpharma, mbtests #> Search preference: org #> Team: <not defined> #> Phrase: <not defined> #> Language: All #> Repositories output: Rows number: 6 #> Commits output: Since: 2022-01-20 14:57:56; Until: 2023-08-28 08:12:15; Rows number: 727"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maciej Banaś. Author, maintainer. Kamil Koziej. Author. Karolina Marcinkowska. Author. Matt Secrest. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Banaś M, Koziej K, Marcinkowska K, Secrest M (2023). GitStats: Get Statistics GitHub GitLab. R package version 0.1.0.9012.","code":"@Manual{,   title = {GitStats: Get Statistics from GitHub and GitLab},   author = {Maciej Banaś and Kamil Koziej and Karolina Marcinkowska and Matt Secrest},   year = {2023},   note = {R package version 0.1.0.9012}, }"},{"path":"/index.html","id":"gitstats-","dir":"","previous_headings":"","what":"Get Statistics from GitHub and GitLab","title":"Get Statistics from GitHub and GitLab","text":"goal GitStats pull git statistics uniform way different Git platforms (GitHub GitLab time-).","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Get Statistics from GitHub and GitLab","text":"","code":"devtools::install_github(\"r-world-devs/GitStats\")"},{"path":"/index.html","id":"setting-up-your-tokens","dir":"","previous_headings":"","what":"Setting up your tokens","title":"Get Statistics from GitHub and GitLab","text":"Please remember access tokens stored environment variables: GITHUB_PAT access GitHub API GITLAB_PAT GitLab API.","code":""},{"path":"/index.html","id":"scope-of-tokens","dir":"","previous_headings":"Setting up your tokens","what":"Scope of tokens","title":"Get Statistics from GitHub and GitLab","text":"GitStats work need: [GitHub] public_repo, read:org read:user scopes, [GitLab] read_api scope.","code":""},{"path":"/index.html","id":"gitstats-workflow","dir":"","previous_headings":"","what":"GitStats workflow","title":"Get Statistics from GitHub and GitLab","text":"use GitStats, refer documentation.","code":""},{"path":"/index.html","id":"acknowledgement","dir":"","previous_headings":"","what":"Acknowledgement","title":"Get Statistics from GitHub and GitLab","text":"Special thanks : Kamil Koziej - reviewing permanently pull requests suggesting efficient solutions, Karolina Marcinkowska - substantial improvements plots, Krystian Igras - major review GitStats, Matt Secrest - making use scripts apply search feature, Kamil Wais, Adam Forys - guidelines beginning project, James Black - giving kick-project inspiration GithubMetrics.","code":""},{"path":"/reference/GitHub.html","id":null,"dir":"Reference","previous_headings":"","what":"A GitHub API Client class — GitHub","title":"A GitHub API Client class — GitHub","text":"object methods obtain information form GitHub API.","code":""},{"path":"/reference/GitHub.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"A GitHub API Client class — GitHub","text":"gitstats::GitService -> GitHub","code":""},{"path":"/reference/GitHub.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"A GitHub API Client class — GitHub","text":"gitstats::GitService$get_repos() gitstats::GitService$initialize()","code":""},{"path":"/reference/GitHub.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"A GitHub API Client class — GitHub","text":"GitHub$get_commits() GitHub$print()","code":""},{"path":"/reference/GitHub.html","id":"method-get-commits-","dir":"Reference","previous_headings":"","what":"Method get_commits()","title":"A GitHub API Client class — GitHub","text":"method get information commits.","code":""},{"path":"/reference/GitHub.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A GitHub API Client class — GitHub","text":"","code":"GitHub$get_commits(   orgs = self$orgs,   date_from,   date_until = Sys.Date(),   by,   team )"},{"path":"/reference/GitHub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A GitHub API Client class — GitHub","text":"orgs character vector organisations. date_from starting date look commits . date_until end date look commits . character, choose : team - team phrase - keyword code blobs. team list team members.","code":""},{"path":"/reference/GitHub.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"A GitHub API Client class — GitHub","text":"data.frame commits","code":""},{"path":"/reference/GitHub.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"A GitHub API Client class — GitHub","text":"print method GitHub object","code":""},{"path":"/reference/GitHub.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"A GitHub API Client class — GitHub","text":"","code":"GitHub$print()"},{"path":"/reference/GitLab.html","id":null,"dir":"Reference","previous_headings":"","what":"A GitLab API Client class — GitLab","title":"A GitLab API Client class — GitLab","text":"object methods obtain information form GitLab API.","code":""},{"path":"/reference/GitLab.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"A GitLab API Client class — GitLab","text":"gitstats::GitService -> GitLab","code":""},{"path":"/reference/GitLab.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"A GitLab API Client class — GitLab","text":"gitstats::GitService$get_repos() gitstats::GitService$initialize()","code":""},{"path":"/reference/GitLab.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"A GitLab API Client class — GitLab","text":"GitLab$get_commits() GitLab$print()","code":""},{"path":"/reference/GitLab.html","id":"method-get-commits-","dir":"Reference","previous_headings":"","what":"Method get_commits()","title":"A GitLab API Client class — GitLab","text":"method get information commits.","code":""},{"path":"/reference/GitLab.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A GitLab API Client class — GitLab","text":"","code":"GitLab$get_commits(date_from, date_until = Sys.time(), by, team)"},{"path":"/reference/GitLab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A GitLab API Client class — GitLab","text":"date_from starting date look commits date_until end date look commits character, choose : team - team phrase - keyword code blobs. team list team members.","code":""},{"path":"/reference/GitLab.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"A GitLab API Client class — GitLab","text":"data.frame commits","code":""},{"path":"/reference/GitLab.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"A GitLab API Client class — GitLab","text":"print method GitLab object","code":""},{"path":"/reference/GitLab.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"A GitLab API Client class — GitLab","text":"","code":"GitLab$print()"},{"path":"/reference/GitService.html","id":null,"dir":"Reference","previous_headings":"","what":"A Git Service API Client superclass — GitService","title":"A Git Service API Client superclass — GitService","text":"superclass GitHub GitLab classes","code":""},{"path":"/reference/GitService.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"A Git Service API Client superclass — GitService","text":"rest_api_url character, url REST API. gql_api_url character, url GraphQL API. gql_query environment GraphQL queries. orgs character vector organizations. git_service character specifying whether GitHub GitLab. enterprise character defining whether Git Service public enterprise version. org_limit integer defining many org may API pull. token token authorizing access API.","code":""},{"path":"/reference/GitService.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"A Git Service API Client superclass — GitService","text":"token token authorizing access API.","code":""},{"path":[]},{"path":"/reference/GitService.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"A Git Service API Client superclass — GitService","text":"GitService$new() GitService$get_repos() GitService$clone()","code":""},{"path":"/reference/GitService.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"A Git Service API Client superclass — GitService","text":"Create new GitService object","code":""},{"path":"/reference/GitService.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Git Service API Client superclass — GitService","text":"","code":"GitService$new(   rest_api_url = NA,   gql_api_url = NA,   token = NA,   orgs = NA,   org_limit = NA )"},{"path":"/reference/GitService.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Git Service API Client superclass — GitService","text":"rest_api_url url rest API. gql_api_url url GraphQL API. token token. orgs character vector organisations (owners repositories case GitHub groups projects case GitLab). org_limit integer set maximum number organizations pulled Git Service.","code":""},{"path":"/reference/GitService.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"A Git Service API Client superclass — GitService","text":"new GitService object","code":""},{"path":"/reference/GitService.html","id":"method-get-repos-","dir":"Reference","previous_headings":"","what":"Method get_repos()","title":"A Git Service API Client superclass — GitService","text":"method list repositories organization, team keyword.","code":""},{"path":"/reference/GitService.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"A Git Service API Client superclass — GitService","text":"","code":"GitService$get_repos(by, team, phrase, language = NULL)"},{"path":"/reference/GitService.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Git Service API Client superclass — GitService","text":"character, choose : team - team phrase - keyword code blobs. team list team members. phrase character look code blobs. Obligatory parameter set \"phrase\". language character specifying language used repositories.","code":""},{"path":"/reference/GitService.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"A Git Service API Client superclass — GitService","text":"data.frame repositories.","code":""},{"path":"/reference/GitService.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"A Git Service API Client superclass — GitService","text":"objects class cloneable method.","code":""},{"path":"/reference/GitService.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"A Git Service API Client superclass — GitService","text":"","code":"GitService$clone(deep = FALSE)"},{"path":"/reference/GitService.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Git Service API Client superclass — GitService","text":"deep Whether make deep clone.","code":""},{"path":"/reference/GraphQLQuery.html","id":null,"dir":"Reference","previous_headings":"","what":"A GraphQLQuery class — GraphQLQuery","title":"A GraphQLQuery class — GraphQLQuery","text":"superclass GraphQL Queries.","code":""},{"path":[]},{"path":"/reference/GraphQLQuery.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"A GraphQLQuery class — GraphQLQuery","text":"GraphQLQuery$clone()","code":""},{"path":"/reference/GraphQLQuery.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"A GraphQLQuery class — GraphQLQuery","text":"objects class cloneable method.","code":""},{"path":"/reference/GraphQLQuery.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A GraphQLQuery class — GraphQLQuery","text":"","code":"GraphQLQuery$clone(deep = FALSE)"},{"path":"/reference/GraphQLQuery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A GraphQLQuery class — GraphQLQuery","text":"deep Whether make deep clone.","code":""},{"path":"/reference/GraphQLQueryGitHub.html","id":null,"dir":"Reference","previous_headings":"","what":"A GraphQLQueryGitHub class — GraphQLQueryGitHub","title":"A GraphQLQueryGitHub class — GraphQLQueryGitHub","text":"class methods build GraphQL Queries GitHub.","code":""},{"path":"/reference/GraphQLQueryGitHub.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"A GraphQLQueryGitHub class — GraphQLQueryGitHub","text":"gitstats::GraphQLQuery -> GraphQLQueryGitHub","code":""},{"path":"/reference/GraphQLQueryGitHub.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"A GraphQLQueryGitHub class — GraphQLQueryGitHub","text":"Inherited methods","code":""},{"path":"/reference/GraphQLQueryGitHub.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"A GraphQLQueryGitHub class — GraphQLQueryGitHub","text":"GraphQLQueryGitHub$repos_by_org() GraphQLQueryGitHub$users_id() GraphQLQueryGitHub$commits_by_repo() GraphQLQueryGitHub$clone()","code":""},{"path":"/reference/GraphQLQueryGitHub.html","id":"method-repos-by-org-","dir":"Reference","previous_headings":"","what":"Method repos_by_org()","title":"A GraphQLQueryGitHub class — GraphQLQueryGitHub","text":"Prepare query get repositories GitHub.","code":""},{"path":"/reference/GraphQLQueryGitHub.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A GraphQLQueryGitHub class — GraphQLQueryGitHub","text":"","code":"GraphQLQueryGitHub$repos_by_org(org, cursor)"},{"path":"/reference/GraphQLQueryGitHub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A GraphQLQueryGitHub class — GraphQLQueryGitHub","text":"org organization repositories. cursor end cursor repositories page.","code":""},{"path":"/reference/GraphQLQueryGitHub.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"A GraphQLQueryGitHub class — GraphQLQueryGitHub","text":"query.","code":""},{"path":"/reference/GraphQLQueryGitHub.html","id":"method-users-id-","dir":"Reference","previous_headings":"","what":"Method users_id()","title":"A GraphQLQueryGitHub class — GraphQLQueryGitHub","text":"Prepare query get ID GitHub user.","code":""},{"path":"/reference/GraphQLQueryGitHub.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"A GraphQLQueryGitHub class — GraphQLQueryGitHub","text":"","code":"GraphQLQueryGitHub$users_id(login)"},{"path":"/reference/GraphQLQueryGitHub.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"A GraphQLQueryGitHub class — GraphQLQueryGitHub","text":"login login user.","code":""},{"path":"/reference/GraphQLQueryGitHub.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"A GraphQLQueryGitHub class — GraphQLQueryGitHub","text":"query.","code":""},{"path":"/reference/GraphQLQueryGitHub.html","id":"method-commits-by-repo-","dir":"Reference","previous_headings":"","what":"Method commits_by_repo()","title":"A GraphQLQueryGitHub class — GraphQLQueryGitHub","text":"Prepare query get commits GitHub.","code":""},{"path":"/reference/GraphQLQueryGitHub.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"A GraphQLQueryGitHub class — GraphQLQueryGitHub","text":"","code":"GraphQLQueryGitHub$commits_by_repo(   org,   repo,   since,   until,   commits_cursor = \"\",   author_id = \"\" )"},{"path":"/reference/GraphQLQueryGitHub.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"A GraphQLQueryGitHub class — GraphQLQueryGitHub","text":"org GitHub organization. repo Name repository. since Git Time Stamp starting date commits. Git Time STamp end date commits. commits_cursor endCursor. author_id Id author.","code":""},{"path":"/reference/GraphQLQueryGitHub.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"A GraphQLQueryGitHub class — GraphQLQueryGitHub","text":"query.","code":""},{"path":"/reference/GraphQLQueryGitHub.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"A GraphQLQueryGitHub class — GraphQLQueryGitHub","text":"objects class cloneable method.","code":""},{"path":"/reference/GraphQLQueryGitHub.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"A GraphQLQueryGitHub class — GraphQLQueryGitHub","text":"","code":"GraphQLQueryGitHub$clone(deep = FALSE)"},{"path":"/reference/GraphQLQueryGitHub.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"A GraphQLQueryGitHub class — GraphQLQueryGitHub","text":"deep Whether make deep clone.","code":""},{"path":"/reference/GraphQLQueryGitLab.html","id":null,"dir":"Reference","previous_headings":"","what":"A GraphQLQueryGitLab class — GraphQLQueryGitLab","title":"A GraphQLQueryGitLab class — GraphQLQueryGitLab","text":"class methods build GraphQL Queries GitLab.","code":""},{"path":"/reference/GraphQLQueryGitLab.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"A GraphQLQueryGitLab class — GraphQLQueryGitLab","text":"gitstats::GraphQLQuery -> GraphQLQueryGitLab","code":""},{"path":"/reference/GraphQLQueryGitLab.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"A GraphQLQueryGitLab class — GraphQLQueryGitLab","text":"Inherited methods","code":""},{"path":"/reference/GraphQLQueryGitLab.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"A GraphQLQueryGitLab class — GraphQLQueryGitLab","text":"GraphQLQueryGitLab$projects_by_group() GraphQLQueryGitLab$clone()","code":""},{"path":"/reference/GraphQLQueryGitLab.html","id":"method-projects-by-group-","dir":"Reference","previous_headings":"","what":"Method projects_by_group()","title":"A GraphQLQueryGitLab class — GraphQLQueryGitLab","text":"Method build query pull projects group.","code":""},{"path":"/reference/GraphQLQueryGitLab.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A GraphQLQueryGitLab class — GraphQLQueryGitLab","text":"","code":"GraphQLQueryGitLab$projects_by_group(group, projects_cursor)"},{"path":"/reference/GraphQLQueryGitLab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A GraphQLQueryGitLab class — GraphQLQueryGitLab","text":"group group projects. projects_cursor cursor.","code":""},{"path":"/reference/GraphQLQueryGitLab.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"A GraphQLQueryGitLab class — GraphQLQueryGitLab","text":"query.","code":""},{"path":"/reference/GraphQLQueryGitLab.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"A GraphQLQueryGitLab class — GraphQLQueryGitLab","text":"objects class cloneable method.","code":""},{"path":"/reference/GraphQLQueryGitLab.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"A GraphQLQueryGitLab class — GraphQLQueryGitLab","text":"","code":"GraphQLQueryGitLab$clone(deep = FALSE)"},{"path":"/reference/GraphQLQueryGitLab.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"A GraphQLQueryGitLab class — GraphQLQueryGitLab","text":"deep Whether make deep clone.","code":""},{"path":"/reference/add_team_member.html","id":null,"dir":"Reference","previous_headings":"","what":"Add your team member — add_team_member","title":"Add your team member — add_team_member","text":"Passes information team member team field.","code":""},{"path":"/reference/add_team_member.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add your team member — add_team_member","text":"","code":"add_team_member(gitstats_obj, member_name, ...)"},{"path":"/reference/add_team_member.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add your team member — add_team_member","text":"gitstats_obj gitstats object. member_name Name member. ... user logins.","code":""},{"path":"/reference/add_team_member.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add your team member — add_team_member","text":"gitstats object new information team member.","code":""},{"path":"/reference/add_team_member.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add your team member — add_team_member","text":"","code":"if (FALSE)  my_gitstats <- create_gitstats() %>%   add_team_member(\"Peter Parker\", \"spider_man\", \"spidey\") %>%   add_team_member(\"Tony Stark\", \"ironMan\", \"tony_s\")"},{"path":"/reference/create_gitstats.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a GitStats object — create_gitstats","title":"Create a GitStats object — create_gitstats","text":"Create GitStats object","code":""},{"path":"/reference/create_gitstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a GitStats object — create_gitstats","text":"","code":"create_gitstats()"},{"path":"/reference/create_gitstats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a GitStats object — create_gitstats","text":"GitStats object.","code":""},{"path":"/reference/create_gitstats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a GitStats object — create_gitstats","text":"","code":"my_gitstats <- create_gitstats()"},{"path":"/reference/get_commits.html","id":null,"dir":"Reference","previous_headings":"","what":"Get commits — get_commits","title":"Get commits — get_commits","text":"Retrieves commits table pulled GitStats.","code":""},{"path":"/reference/get_commits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get commits — get_commits","text":"","code":"get_commits(gitstats_obj)"},{"path":"/reference/get_commits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get commits — get_commits","text":"gitstats_obj GitStats object.","code":""},{"path":"/reference/get_commits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get commits — get_commits","text":"table commits.","code":""},{"path":"/reference/get_commits_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Statistics On Commits — get_commits_stats","title":"Get Statistics On Commits — get_commits_stats","text":"Prepare statistics pulled commits data.","code":""},{"path":"/reference/get_commits_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Statistics On Commits — get_commits_stats","text":"","code":"get_commits_stats(gitstats_obj, time_interval = c(\"month\", \"day\", \"week\"))"},{"path":"/reference/get_commits_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Statistics On Commits — get_commits_stats","text":"gitstats_obj GitStats class object. time_interval character, specifying time interval show statistics.","code":""},{"path":"/reference/get_commits_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Statistics On Commits — get_commits_stats","text":"table commits_stats class.","code":""},{"path":"/reference/get_orgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get organizations — get_orgs","title":"Get organizations — get_orgs","text":"Retrieves organizations downloaded GitStats. Especially helpful user scanning whole git platform want glimpse organizations.","code":""},{"path":"/reference/get_orgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get organizations — get_orgs","text":"","code":"get_orgs(gitstats_obj)"},{"path":"/reference/get_orgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get organizations — get_orgs","text":"gitstats_obj GitStats object.","code":""},{"path":"/reference/get_orgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get organizations — get_orgs","text":"vector organizations.","code":""},{"path":"/reference/get_repos.html","id":null,"dir":"Reference","previous_headings":"","what":"Get repositories — get_repos","title":"Get repositories — get_repos","text":"Retrieves repositories table pulled GitStats.","code":""},{"path":"/reference/get_repos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get repositories — get_repos","text":"","code":"get_repos(gitstats_obj)"},{"path":"/reference/get_repos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get repositories — get_repos","text":"gitstats_obj GitStats object.","code":""},{"path":"/reference/get_repos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get repositories — get_repos","text":"table repositories.","code":""},{"path":"/reference/get_repos_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Statistics On Repositories — get_repos_stats","title":"Get Statistics On Repositories — get_repos_stats","text":"Prepare statistics pulled repositories data.","code":""},{"path":"/reference/get_repos_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Statistics On Repositories — get_repos_stats","text":"","code":"get_repos_stats(gitstats_obj)"},{"path":"/reference/get_repos_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Statistics On Repositories — get_repos_stats","text":"gitstats_obj GitStats class object.","code":""},{"path":"/reference/get_repos_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Statistics On Repositories — get_repos_stats","text":"table repos_stats class.","code":""},{"path":"/reference/get_users.html","id":null,"dir":"Reference","previous_headings":"","what":"Get users — get_users","title":"Get users — get_users","text":"Retrieves users table pulled GitStats.","code":""},{"path":"/reference/get_users.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get users — get_users","text":"","code":"get_users(gitstats_obj)"},{"path":"/reference/get_users.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get users — get_users","text":"gitstats_obj GitStats object.","code":""},{"path":"/reference/get_users.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get users — get_users","text":"table users.","code":""},{"path":"/reference/gitstats_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Git Statistics. — gitstats_plot","title":"Plot Git Statistics. — gitstats_plot","text":"generic plot statistics repositories commits.","code":""},{"path":"/reference/gitstats_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Git Statistics. — gitstats_plot","text":"","code":"gitstats_plot(   stats_table = NULL,   value_to_plot = NULL,   plotly_mode = FALSE,   value_decreasing = TRUE,   n = NULL )"},{"path":"/reference/gitstats_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Git Statistics. — gitstats_plot","text":"stats_table table repository commits statistics. value_to_plot Value plotted. plotly_mode boolean, TRUE, turns plot interactive plotly. value_decreasing boolean set ordering value plot. n integer, maximum number repos/organizations show plot.","code":""},{"path":"/reference/gitstats_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Git Statistics. — gitstats_plot","text":"plot.","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/plot_commits.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot commits data. — plot_commits","title":"Plot commits data. — plot_commits","text":"Plot commits data.","code":""},{"path":"/reference/plot_commits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot commits data. — plot_commits","text":"","code":"plot_commits(gitstats_obj, stats_by = c(\"day\", \"week\", \"month\"))"},{"path":"/reference/plot_commits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot commits data. — plot_commits","text":"gitstats_obj gitstats object. stats_by character, specifying time interval show statistics.","code":""},{"path":"/reference/plot_commits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot commits data. — plot_commits","text":"plot.","code":""},{"path":"/reference/plot_commits_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot commits additions and deletions. — plot_commits_stats","title":"Plot commits additions and deletions. — plot_commits_stats","text":"Plot commits additions deletions.","code":""},{"path":"/reference/plot_commits_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot commits additions and deletions. — plot_commits_stats","text":"","code":"plot_commit_lines(gitstats_obj)"},{"path":"/reference/plot_commits_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot commits additions and deletions. — plot_commits_stats","text":"gitstats_obj gitstats object.","code":""},{"path":"/reference/plot_commits_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot commits additions and deletions. — plot_commits_stats","text":"plot.","code":""},{"path":"/reference/plot_repos.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot repository data. — plot_repos","title":"Plot repository data. — plot_repos","text":"Plots top repositories last activity.","code":""},{"path":"/reference/plot_repos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot repository data. — plot_repos","text":"","code":"plot_repos(gitstats_obj, repos_n = 10)"},{"path":"/reference/plot_repos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot repository data. — plot_repos","text":"gitstats_obj gitstats object. repos_n integer, number repos show plot.","code":""},{"path":"/reference/plot_repos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot repository data. — plot_repos","text":"plot.","code":""},{"path":"/reference/pull_commits.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information on commits. — pull_commits","title":"Get information on commits. — pull_commits","text":"List repositories organization, team.","code":""},{"path":"/reference/pull_commits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information on commits. — pull_commits","text":"","code":"pull_commits(gitstats_obj, date_from = NULL, date_until = Sys.time())"},{"path":"/reference/pull_commits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information on commits. — pull_commits","text":"gitstats_obj GitStats object. date_from starting date look commits date_until end date look commits ","code":""},{"path":"/reference/pull_commits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information on commits. — pull_commits","text":"GitStats class object updated $commits field.","code":""},{"path":"/reference/pull_commits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information on commits. — pull_commits","text":"","code":"if (FALSE) { my_gitstats <- create_gitstats() %>%   set_host(     api_url = \"https://api.github.com\",     token = Sys.getenv(\"GITHUB_PAT\"),     orgs = c(\"r-world-devs\")   ) %>%   set_host(     api_url = \"https://gitlab.com/api/v4\",     token = Sys.getenv(\"GITLAB_PAT_PUBLIC\"),     orgs = \"mbtests\"   ) %>%   set_params(     search_param = \"team\",     team_name = \"rwdevs\"   ) %>%   set_team_member(\"Maciej Banaś\", \"maciekbanas\") %>%   pull_commits(date_from = \"2018-01-01\") }"},{"path":"/reference/pull_repos.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information on repositories. — pull_repos","title":"Get information on repositories. — pull_repos","text":"List repositories organization, team keyword.","code":""},{"path":"/reference/pull_repos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information on repositories. — pull_repos","text":"","code":"pull_repos(gitstats_obj, add_contributors = FALSE)"},{"path":"/reference/pull_repos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information on repositories. — pull_repos","text":"gitstats_obj GitStats object. add_contributors logical parameter decide whether add information repositories' contributors repositories output (table) pulling organizations (orgs) phrase. default set FALSE makes function run faster , case orgs search parameter, reaches GraphQL endpoint query repositories, case phrase search parameter reaches repositories REST API endpoint. However, pitfall result convey information contributors.  set TRUE, GitStats iterates additionally pulled repositories reaches contributors APIs, makes slower, gives additional information. may achieved running separately function pull_repos_contributors() GitStats object repositories output.  pulling repositories team parameter always turns TRUE pulls information contributors.","code":""},{"path":"/reference/pull_repos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information on repositories. — pull_repos","text":"GitStats class object updated $repos field.","code":""},{"path":"/reference/pull_repos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information on repositories. — pull_repos","text":"","code":"if (FALSE) { my_gitstats <- create_gitstats() %>%   set_host(     api_url = \"https://api.github.com\",     token = Sys.getenv(\"GITHUB_PAT\"),     orgs = c(\"r-world-devs\", \"openpharma\")   ) %>%   set_host(     api_url = \"https://gitlab.com/api/v4\",     token = Sys.getenv(\"GITLAB_PAT_PUBLIC\"),     orgs = \"mbtests\"   ) %>%   pull_repos() }"},{"path":"/reference/pull_repos_contributors.html","id":null,"dir":"Reference","previous_headings":"","what":"Add information on contributors to your repositories. — pull_repos_contributors","title":"Add information on contributors to your repositories. — pull_repos_contributors","text":"method add information repository contributors.","code":""},{"path":"/reference/pull_repos_contributors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add information on contributors to your repositories. — pull_repos_contributors","text":"","code":"pull_repos_contributors(gitstats_obj)"},{"path":"/reference/pull_repos_contributors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add information on contributors to your repositories. — pull_repos_contributors","text":"gitstats_obj GitStats object.","code":""},{"path":"/reference/pull_repos_contributors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add information on contributors to your repositories. — pull_repos_contributors","text":"table repositories added information contributors.","code":""},{"path":"/reference/pull_users.html","id":null,"dir":"Reference","previous_headings":"","what":"Get users statistics. — pull_users","title":"Get users statistics. — pull_users","text":"Get information users.","code":""},{"path":"/reference/pull_users.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get users statistics. — pull_users","text":"","code":"pull_users(gitstats_obj, users)"},{"path":"/reference/pull_users.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get users statistics. — pull_users","text":"gitstats_obj GitStats object. users character vector users.","code":""},{"path":"/reference/pull_users.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get users statistics. — pull_users","text":"table users.","code":""},{"path":"/reference/pull_users.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get users statistics. — pull_users","text":"","code":"if (FALSE) {  my_gitstats <- create_gitstats() %>%   set_host(     api_url = \"https://api.github.com\",     token = Sys.getenv(\"GITHUB_PAT\"),     orgs = c(\"r-world-devs\")   ) %>%   set_host(     api_url = \"https://gitlab.com/api/v4\",     token = Sys.getenv(\"GITLAB_PAT_PUBLIC\"),     orgs = \"mbtests\"   ) %>%   pull_users(c(\"maciekabanas\", \"marcinkowskak\")) }"},{"path":"/reference/reset.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset GitStats settings — reset","title":"Reset GitStats settings — reset","text":"Sets settings default: search_param org, language NULLs.","code":""},{"path":"/reference/reset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset GitStats settings — reset","text":"","code":"reset(gitstats_obj)"},{"path":"/reference/reset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset GitStats settings — reset","text":"gitstats_obj GitStats object.","code":""},{"path":"/reference/reset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset GitStats settings — reset","text":"GitStats object.","code":""},{"path":"/reference/reset_language.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset language settings — reset_language","title":"Reset language settings — reset_language","text":"Sets language parameter NULL (switches filtering language.)","code":""},{"path":"/reference/reset_language.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset language settings — reset_language","text":"","code":"reset_language(gitstats_obj)"},{"path":"/reference/reset_language.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset language settings — reset_language","text":"gitstats_obj GitStats object.","code":""},{"path":"/reference/reset_language.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset language settings — reset_language","text":"GitStats object.","code":""},{"path":"/reference/set_connection.html","id":null,"dir":"Reference","previous_headings":"","what":"Setting connections — set_connection","title":"Setting connections — set_connection","text":"Setting connections","code":""},{"path":"/reference/set_connection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setting connections — set_connection","text":"","code":"set_connection(gitstats_obj, api_url, token, orgs = NULL, set_org_limit = 1000)"},{"path":"/reference/set_connection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setting connections — set_connection","text":"gitstats_obj gitstats object. api_url character, url address API. token token. orgs character vector organisations (owners repositories case GitHub groups projects case GitLab). set_org_limit integer defining many orgs API may pull.","code":""},{"path":"/reference/set_connection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setting connections — set_connection","text":"gitstats class object added information connection ($clients field).","code":""},{"path":"/reference/set_connection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Setting connections — set_connection","text":"","code":"if (FALSE) { my_gitstats <- create_gitstats() %>%   set_connection(     api_url = \"https://api.github.com\",     token = Sys.getenv(\"GITHUB_PAT\"),     orgs = c(\"r-world-devs\", \"openpharma\", \"pharmaverse\")   ) %>%   set_connection(     api_url = \"https://gitlab.com/api/v4\",     token = Sys.getenv(\"GITLAB_PAT\"),     orgs = \"erasmusmc-public-health\"   ) }"},{"path":"/reference/set_host.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Git host — set_host","title":"Add Git host — set_host","text":"Add Git host","code":""},{"path":"/reference/set_host.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Git host — set_host","text":"","code":"set_host(gitstats_obj, api_url, token = NULL, orgs = NULL)"},{"path":"/reference/set_host.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Git host — set_host","text":"gitstats_obj GitStats object. api_url character, url address API. token token. orgs character vector organisations (owners repositories case GitHub groups projects case GitLab). need define orgs wish scan whole internal Git platform (enterprise version GitHub GitLab). case public one (like GitHub) need define orgs scanning organizations overkill.","code":""},{"path":"/reference/set_host.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Git host — set_host","text":"GitStats class object added information connection ($hosts field).","code":""},{"path":"/reference/set_host.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Git host — set_host","text":"","code":"if (FALSE) { my_gitstats <- create_gitstats() %>%   set_host(     api_url = \"https://api.github.com\",     orgs = c(\"r-world-devs\", \"openpharma\", \"pharmaverse\")   ) %>%   set_host(     api_url = \"https://gitlab.com/api/v4\",     token = Sys.getenv(\"GITLAB_PAT_PUBLIC\"),     orgs = \"erasmusmc-public-health\"   ) }"},{"path":"/reference/set_organizations.html","id":null,"dir":"Reference","previous_headings":"","what":"Choose your organizations. — set_organizations","title":"Choose your organizations. — set_organizations","text":"method set organizations.","code":""},{"path":"/reference/set_organizations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Choose your organizations. — set_organizations","text":"","code":"set_organizations(gitstats_obj, ..., api_url = NULL)"},{"path":"/reference/set_organizations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Choose your organizations. — set_organizations","text":"gitstats_obj gitstats object. ... character vector oganizations (repo owners project groups). api_url url connection.","code":""},{"path":"/reference/set_organizations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Choose your organizations. — set_organizations","text":"gitstats class object added information organizations $orgs client.","code":""},{"path":[]},{"path":"/reference/set_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up your search settings. — set_params","title":"Set up your search settings. — set_params","text":"Set search settings.","code":""},{"path":"/reference/set_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up your search settings. — set_params","text":"","code":"set_params(   gitstats_obj,   search_param = NULL,   team_name = NULL,   phrase = NULL,   language = \"All\",   print_out = TRUE )"},{"path":"/reference/set_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up your search settings. — set_params","text":"gitstats_obj GitStats object. search_param One three: team, orgs phrase. team_name Name team. phrase phrase look . language language programming code. print_out boolean decide whether print output","code":""},{"path":"/reference/set_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up your search settings. — set_params","text":"GitStats object.","code":""},{"path":"/reference/set_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set up your search settings. — set_params","text":"","code":"if (FALSE) { my_gitstats <- create_gitstats() %>%   set_params(     search_param = \"team\",     team_name = \"Avengers\",     language = \"R\"   ) }"},{"path":"/reference/set_storage.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a storage for your output — set_storage","title":"Set a storage for your output — set_storage","text":"Function set local storage (database) output.","code":""},{"path":"/reference/set_storage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a storage for your output — set_storage","text":"","code":"set_storage(   gitstats_obj,   type,   dbname,   schema = NULL,   host = NULL,   port = NULL,   user = NULL,   password = NULL )"},{"path":"/reference/set_storage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a storage for your output — set_storage","text":"gitstats_obj gitstats object. type character, type storage. dbname Name database. schema db schema. host host. port integer, port address. user Username. password password.","code":""},{"path":"/reference/set_storage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set a storage for your output — set_storage","text":"wrapper dbConnect() function. functionality meant among improve gitstats performance. Basically idea cache API responses database retrieve necessary. E.g. call get_commits(date_from = '2020-01-01') save results database call next time, get_commits() retrieve API results exist databse (new ones).","code":""},{"path":"/reference/set_team.html","id":null,"dir":"Reference","previous_headings":"","what":"Set your team. — set_team","title":"Set your team. — set_team","text":"Declare team members (logins, full names) obtain statistics = \"team\".","code":""},{"path":"/reference/set_team.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set your team. — set_team","text":"","code":"set_team(gitstats_obj, team_name, ...)"},{"path":"/reference/set_team.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set your team. — set_team","text":"gitstats_obj gitstats object. team_name name team. ... character vector team members (names logins).","code":""},{"path":"/reference/set_team.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set your team. — set_team","text":"gitstats class object added information $team field.","code":""},{"path":"/reference/set_team.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set your team. — set_team","text":"Bear mind different Git platforms, team members may use different logins. specify , want get team statistics Git clients.","code":""},{"path":"/reference/set_team.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set your team. — set_team","text":"","code":"if (FALSE) { my_gitstats <- create_gitstats() %>%   set_connection(     api_url = \"https://api.github.com\",     token = Sys.getenv(\"GITHUB_PAT\"),     orgs = c(\"r-world-devs\", \"openpharma\", \"pharmaverse\")   ) %>%   set_team(\"RWD-IE\", \"galachad\", \"kalimu\", \"Cotau\",            \"krystian8207\", \"marcinkowskak\", \"maciekbanas\") %>%   get_repos(by = \"team\") }"},{"path":"/reference/set_team_member.html","id":null,"dir":"Reference","previous_headings":"","what":"Add your team member — set_team_member","title":"Add your team member — set_team_member","text":"Passes information team member team field.","code":""},{"path":"/reference/set_team_member.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add your team member — set_team_member","text":"","code":"set_team_member(gitstats_obj, member_name, ...)"},{"path":"/reference/set_team_member.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add your team member — set_team_member","text":"gitstats_obj GitStats object. member_name Name member. ... user logins.","code":""},{"path":"/reference/set_team_member.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add your team member — set_team_member","text":"GitStats object new information team member.","code":""},{"path":"/reference/set_team_member.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add your team member — set_team_member","text":"","code":"if (FALSE) { my_gitstats <- create_gitstats() %>%   set_team_member(\"Peter Parker\", \"spider_man\", \"spidey\") %>%   set_team_member(\"Tony Stark\", \"ironMan\", \"tony_s\") }"},{"path":"/reference/setup_preferences.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up your search parameters. — setup_preferences","title":"Set up your search parameters. — setup_preferences","text":"Set search parameters.","code":""},{"path":"/reference/setup_preferences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up your search parameters. — setup_preferences","text":"","code":"setup_preferences(   gitstats_obj,   search_param = NULL,   team_name = NULL,   phrase = NULL,   language = NULL )"},{"path":"/reference/setup_preferences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up your search parameters. — setup_preferences","text":"gitstats_obj gitstats object. search_param One three: team, orgs phrase. team_name Name team. phrase phrase look . language language programming code.","code":""},{"path":"/reference/setup_preferences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up your search parameters. — setup_preferences","text":"gitstats object.","code":""},{"path":"/reference/show_storage.html","id":null,"dir":"Reference","previous_headings":"","what":"Show content of database. — show_storage","title":"Show content of database. — show_storage","text":"Print content database.","code":""},{"path":"/reference/show_storage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show content of database. — show_storage","text":"","code":"show_storage(gitstats_obj)"},{"path":"/reference/show_storage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show content of database. — show_storage","text":"gitstats_obj gitstats object.","code":""},{"path":"/reference/show_storage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show content of database. — show_storage","text":"data.frame table names.","code":""},{"path":"/reference/storage_off.html","id":null,"dir":"Reference","previous_headings":"","what":"Switch off storage of data. — storage_off","title":"Switch off storage of data. — storage_off","text":"Switch storage data.","code":""},{"path":"/reference/storage_off.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Switch off storage of data. — storage_off","text":"","code":"storage_off(gitstats_obj)"},{"path":"/reference/storage_off.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Switch off storage of data. — storage_off","text":"gitstats_obj gitstats object.","code":""},{"path":"/reference/storage_off.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Switch off storage of data. — storage_off","text":"gitstats class object field $use_storage turned FALSE","code":""},{"path":"/reference/storage_on.html","id":null,"dir":"Reference","previous_headings":"","what":"Switch on storage of data. — storage_on","title":"Switch on storage of data. — storage_on","text":"Switch storage data.","code":""},{"path":"/reference/storage_on.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Switch on storage of data. — storage_on","text":"","code":"storage_on(gitstats_obj)"},{"path":"/reference/storage_on.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Switch on storage of data. — storage_on","text":"gitstats_obj gitstats object.","code":""},{"path":"/reference/storage_on.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Switch on storage of data. — storage_on","text":"gitstats class object field $use_storage turned TRUE","code":""},{"path":[]},{"path":[]},{"path":"/news/index.html","id":"new-functions-1-0-0","dir":"Changelog","previous_headings":"Breaking changes:","what":"New functions:","title":"GitStats 1.0.0","text":"added get_*_stats functions prepare summary stats pulled data: repositories commits (: #276), rename refactor plot functions one generic gitstats_plot takes input repos_stats commits_stats class objects (: #276),","code":""},{"path":"/news/index.html","id":"new-names-for-core-functions-1-0-0","dir":"Changelog","previous_headings":"Breaking changes:","what":"New names for core functions:","title":"GitStats 1.0.0","text":"changed names get_* pull_* functions; get_* functions now retrieve already pulled data GitStats object (: #294), changed name setup set_params function (: #294), set new name set_connection function: set_host informative (shorter) (: #271), changed name function: add_team_member set_team_member (: #271).","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-1-0-0","dir":"Changelog","previous_headings":"Major chagnes:","what":"New features:","title":"GitStats 1.0.0","text":"added setting tokens default - user PATs set environment variables (e.g. GITHUB_PAT GITLAB_PAT), need pass argument set_connection (: #120), added pull_users() function pull information users (: #199), added possibility scanning whole internal git platforms orgs passed (: #258), added get_orgs() function print organizations (: #283), added resetting settings default reset() function (: #270) added resetting language search preferences reset_language() setting language parameter setup() function (: #231)","code":""},{"path":"/news/index.html","id":"improving-performance-with-rest-and-graphql-apis-1-0-0","dir":"Changelog","previous_headings":"Major chagnes:","what":"Improving performance with REST and GraphQL APIs:","title":"GitStats 1.0.0","text":"added switching REST engine case GraphQL fails 502 error (: #225) added GraphQL engine getting GitLab repos organization (: #218) removed contributors basic stat pulling repos org phrase improve speed pulling repositories data. Added pull_repos_contributors() user function add_contributors parameter pull_repos() function add conditionally information contributors repositories table (: #235)","code":""},{"path":"/news/index.html","id":"minor-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Minor changes:","title":"GitStats 1.0.0","text":"handled errors proper messages tokens grant access (: #242 #301), repositories output set api_url column address repo, host (: #201), fixed adding GitLab subgroups (: #176), exported pipe operator (%>%) (: #289).","code":""},{"path":"/news/index.html","id":"gitstats-010","dir":"Changelog","previous_headings":"","what":"GitStats 0.1.0","title":"GitStats 0.1.0","text":"first release GitStats given features: create_gitstats() - creating GitStats object, set_connection() - adding hosts GitStats object, setup() - setting search parameter org, team phrase, setting programming language repositories, get_repos() - pulling repositories GitHub GitLab API standardized table, get_commits() - pulling commits GitHub GitLab API standardized table, set_team_member() - adding team members GitStats object.","code":""}]
