[{"path":"https://r-world-devs.github.io/GitStats/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 GitStats authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://r-world-devs.github.io/GitStats/articles/get_data.html","id":"verbose-mode","dir":"Articles","previous_headings":"","what":"Verbose mode","title":"Get data","text":"messages overwhelm , can switch function: globally:","code":"release_logs <- get_release_logs(   gitstats_object = git_stats,   since = \"2024-01-01\",   verbose = FALSE ) dplyr::glimpse(release_logs) #> Rows: 25 #> Columns: 7 #> $ repo_name    <chr> \"cohortBuilder\", \"GitStats\", \"GitStats\", \"GitStats\", \"que… #> $ repo_url     <chr> \"https://github.com/r-world-devs/cohortBuilder\", \"https:/… #> $ release_name <chr> \"cohortBuilder 0.3.0\", \"2.0.2\", \"2.0.1\", \"1.1.0\", \"First … #> $ release_tag  <chr> \"v0.3.0\", \"v2.0.2\", \"v2.0.1\", \"v1.1.0\", \"v0.1.0\", \"v0.1.0… #> $ published_at <dttm> 2024-09-27 11:35:06, 2024-07-19 07:59:12, 2024-05-14 10:… #> $ release_url  <chr> \"https://github.com/r-world-devs/cohortBuilder/releases/t… #> $ release_log  <chr> \"* Add new filter of type `\\\"query\\\"` that allows to conf… verbose_off(git_stats)"},{"path":"https://r-world-devs.github.io/GitStats/articles/get_data.html","id":"storage","dir":"Articles","previous_headings":"","what":"Storage","title":"Get data","text":"pulling, data saved GitStats. Caching feature default turned . run get_*() function , data retrieved GitStats object. Unless, switch cache: simply change parameters function:","code":"commits <- get_commits(   gitstats_object = git_stats,   since           = \"2024-06-01\",   until           = \"2024-06-30\",   progress        = FALSE ) #> ℹ [Host:GitHub][Engine:GraphQl][Scope:r-world-devs] Pulling commits... #> ℹ [Host:GitHub][Engine:GraphQl][Scope:openpharma] Pulling commits... #> ℹ [Host:GitLab][Engine:REST][Scope:mbtests] Pulling commits... dplyr::glimpse(commits) #> Rows: 107 #> Columns: 10 #> $ id             <chr> \"C_kwDOHYNOFdoAKGU3Mjg5MTViZGM4YzYzMTIwOWEwMzEwMDIwOTA0… #> $ committed_date <dttm> 2024-06-05 11:02:21, 2024-06-05 10:55:59, 2024-06-05 1… #> $ author         <chr> \"Kamil Koziej\", \"Kamil Koziej\", \"Kamil Koziej\", \"Krysti… #> $ author_login   <chr> NA, NA, NA, \"krystian8207\", \"krystian8207\", \"krystian82… #> $ author_name    <chr> NA, NA, NA, \"Krystian Igras\", \"Krystian Igras\", \"Krysti… #> $ additions      <int> 559, 0, 219, 1, 2, 108, 38, 83, 14, 1596, 973, 1292, 3,… #> $ deletions      <int> 304, 19, 87, 1, 1, 1, 0, 29, 0, 340, 163, 799, 6, 54, 1… #> $ repository     <chr> \"cohortBuilder\", \"cohortBuilder\", \"cohortBuilder\", \"coh… #> $ organization   <chr> \"r-world-devs\", \"r-world-devs\", \"r-world-devs\", \"r-worl… #> $ api_url        <chr> \"https://api.github.com\", \"https://api.github.com\", \"ht… commits <- get_commits(   gitstats_object = git_stats,   since           = \"2024-06-01\",   until           = \"2024-06-30\" ) #> ! Retrieving commits from the GitStats storage. #> ℹ If you wish to pull the data from API once more, set `cache` parameter to `FALSE`. dplyr::glimpse(commits) #> Rows: 107 #> Columns: 10 #> $ id             <chr> \"C_kwDOHYNOFdoAKGU3Mjg5MTViZGM4YzYzMTIwOWEwMzEwMDIwOTA0… #> $ committed_date <dttm> 2024-06-05 11:02:21, 2024-06-05 10:55:59, 2024-06-05 1… #> $ author         <chr> \"Kamil Koziej\", \"Kamil Koziej\", \"Kamil Koziej\", \"Krysti… #> $ author_login   <chr> NA, NA, NA, \"krystian8207\", \"krystian8207\", \"krystian82… #> $ author_name    <chr> NA, NA, NA, \"Krystian Igras\", \"Krystian Igras\", \"Krysti… #> $ additions      <int> 559, 0, 219, 1, 2, 108, 38, 83, 14, 1596, 973, 1292, 3,… #> $ deletions      <int> 304, 19, 87, 1, 1, 1, 0, 29, 0, 340, 163, 799, 6, 54, 1… #> $ repository     <chr> \"cohortBuilder\", \"cohortBuilder\", \"cohortBuilder\", \"coh… #> $ organization   <chr> \"r-world-devs\", \"r-world-devs\", \"r-world-devs\", \"r-worl… #> $ api_url        <chr> \"https://api.github.com\", \"https://api.github.com\", \"ht… commits <- get_commits(   gitstats_object = git_stats,   since    = \"2024-06-01\",   until    = \"2024-06-30\",   cache    = FALSE,   progress = FALSE ) #> ℹ Cache set to FALSE, I will pull data from API. #> ℹ [Host:GitHub][Engine:GraphQl][Scope:r-world-devs] Pulling commits... #> ℹ [Host:GitHub][Engine:GraphQl][Scope:openpharma] Pulling commits... #> ℹ [Host:GitLab][Engine:REST][Scope:mbtests] Pulling commits... dplyr::glimpse(commits) #> Rows: 107 #> Columns: 10 #> $ id             <chr> \"C_kwDOHYNOFdoAKGU3Mjg5MTViZGM4YzYzMTIwOWEwMzEwMDIwOTA0… #> $ committed_date <dttm> 2024-06-05 11:02:21, 2024-06-05 10:55:59, 2024-06-05 1… #> $ author         <chr> \"Kamil Koziej\", \"Kamil Koziej\", \"Kamil Koziej\", \"Krysti… #> $ author_login   <chr> NA, NA, NA, \"krystian8207\", \"krystian8207\", \"krystian82… #> $ author_name    <chr> NA, NA, NA, \"Krystian Igras\", \"Krystian Igras\", \"Krysti… #> $ additions      <int> 559, 0, 219, 1, 2, 108, 38, 83, 14, 1596, 973, 1292, 3,… #> $ deletions      <int> 304, 19, 87, 1, 1, 1, 0, 29, 0, 340, 163, 799, 6, 54, 1… #> $ repository     <chr> \"cohortBuilder\", \"cohortBuilder\", \"cohortBuilder\", \"coh… #> $ organization   <chr> \"r-world-devs\", \"r-world-devs\", \"r-world-devs\", \"r-worl… #> $ api_url        <chr> \"https://api.github.com\", \"https://api.github.com\", \"ht… commits <- get_commits(   gitstats_object = git_stats,   since           = \"2024-07-01\",   progress        = FALSE ) #> ℹ Parameters changed, I will pull data from API. #> ℹ [Host:GitHub][Engine:GraphQl][Scope:r-world-devs] Pulling commits... #> ℹ [Host:GitHub][Engine:GraphQl][Scope:openpharma] Pulling commits... #> ℹ [Host:GitLab][Engine:REST][Scope:mbtests] Pulling commits... #> ℹ Looking up for authors' names and logins... dplyr::glimpse(commits) #> Rows: 149 #> Columns: 10 #> $ id             <chr> \"C_kwDOHYNOFdoAKDJjN2Q4YTFkNDIzNmQ0YzIwZTI2NDU1Mjg2YTI1… #> $ committed_date <dttm> 2024-09-25 14:45:42, 2024-09-25 11:00:17, 2024-09-25 1… #> $ author         <chr> \"Krystian Igras\", \"Krystian Igras\", \"Krystian Igras\", \"… #> $ author_login   <chr> \"krystian8207\", \"krystian8207\", \"krystian8207\", \"krysti… #> $ author_name    <chr> \"Krystian Igras\", \"Krystian Igras\", \"Krystian Igras\", \"… #> $ additions      <int> 14, 626, 36, 126, 3, 921, 46, 0, 1, 14, 1, 557, 106, 15… #> $ deletions      <int> 2, 336, 36, 126, 1, 314, 2, 59, 1, 14, 0, 156, 21, 6, 1… #> $ repository     <chr> \"cohortBuilder\", \"cohortBuilder\", \"cohortBuilder\", \"coh… #> $ organization   <chr> \"r-world-devs\", \"r-world-devs\", \"r-world-devs\", \"r-worl… #> $ api_url        <glue> \"https://api.github.com\", \"https://api.github.com\", \"h…"},{"path":"https://r-world-devs.github.io/GitStats/articles/get_repos_with_code.html","id":"package-usage","dir":"Articles","previous_headings":"","what":"Package usage","title":"Getting repositories with specific code or files","text":"GitStats allows search repositories make use certain R packages. function scans repositories import packages (look package name DESCRIPTION NAMESPACE) load package library() request().","code":"package_usage <- get_R_package_usage(   gitstats_object = github_stats,   package_name = \"shiny\" )"},{"path":"https://r-world-devs.github.io/GitStats/articles/set_hosts.html","id":"public-and-private-hosts","dir":"Articles","previous_headings":"","what":"Public and private hosts","title":"Setting hosts","text":"connect public hosts simply call set_github_host() set_gitlab_host() function without specifying host parameter. wish connect internal GitHub GitLab, need pass names hosts host parameter. Remember also tokens set properly hosts (tokens read ).","code":"library(GitStats) git_stats <- create_gitstats() %>%   set_github_host(     orgs = c(\"r-world-devs\", \"openpharma\"),     token = Sys.getenv(\"GITHUB_PAT\")   ) %>%   set_gitlab_host(     orgs = c(\"mbtests\"),     token = Sys.getenv(\"GITLAB_PAT_PUBLIC\")   ) #> ℹ Searching scope set to [org]. #> ℹ Checking organizations... #> ✔ Set connection to GitHub. #> ℹ Searching scope set to [org]. #> ℹ Checking organizations... #> ✔ Set connection to GitLab. git_stats <- create_gitstats() %>%   set_github_host(     host = \"github.internal.com\",     orgs = c(\"org_1\", \"org_2\", \"org_3\"),     token = Sys.getenv(\"YOUR_GITHUB_PAT\")   ) %>%   set_gitlab_host(     host = \"internal.host.com\",     orgs = c(\"internal_org\"),     token = Sys.getenv(\"YOUR_GITLAB_PAT\")   )"},{"path":"https://r-world-devs.github.io/GitStats/articles/set_hosts.html","id":"api-versions","dir":"Articles","previous_headings":"Public and private hosts","what":"API versions","title":"Setting hosts","text":"GitStats configured connect GitHub API (version 3) GitLab API (version 4).","code":""},{"path":"https://r-world-devs.github.io/GitStats/articles/set_hosts.html","id":"scanning-scope","dir":"Articles","previous_headings":"","what":"Scanning scope","title":"Setting hosts","text":"setting hosts choose scanning scope GitStats : organizations/groups - case need pass character arguments (names organizations (case GitHub) groups (case GitLab)) orgs parameter. repositories - case need pass full names repositories ({org_name}/{repo_name}) repos parameter. whole hosts - possible time case private hosts, public ones deemed large. set whole Git platform scanned just set hosts without specifying orgs repos. hand, remember connect internal host, need pass argument host parameter.","code":"git_stats <- create_gitstats() %>%   set_github_host(     orgs = c(\"r-world-devs\", \"openpharma\"),     token = Sys.getenv(\"GITHUB_PAT\")   ) %>%   set_gitlab_host(     orgs = c(\"mbtests\"),     token = Sys.getenv(\"GITLAB_PAT_PUBLIC\")   ) #> ℹ Searching scope set to [org]. #> ℹ Checking organizations... #> ✔ Set connection to GitHub. #> ℹ Searching scope set to [org]. #> ℹ Checking organizations... #> ✔ Set connection to GitLab. git_stats <- create_gitstats() %>%   set_github_host(     repos = c(\"r-world-devs/GitStats\", \"r-world-devs/shinyCohortBuilder\", \"openpharma/DataFakeR\"),     token = Sys.getenv(\"GITHUB_PAT\")   ) %>%   set_gitlab_host(     repos = \"mbtests/gitstatstesting\",     token = Sys.getenv(\"GITLAB_PAT_PUBLIC\")   ) git_stats <- create_gitstats() %>%   set_github_host(     host = \"github.internal.com\",     token = Sys.getenv(\"YOUR_GITHUB_PAT\")   ) %>%   set_gitlab_host(     host = \"internal.host.com\",     token = Sys.getenv(\"YOUR_GITLAB_PAT\")   )"},{"path":"https://r-world-devs.github.io/GitStats/articles/set_hosts.html","id":"authorize-your-access-with-tokens","dir":"Articles","previous_headings":"","what":"Authorize your access with tokens","title":"Setting hosts","text":"Remember pass set_*_host() functions tokens authorize access. can store tokens environment variables, e.g. defined .Renviron file GITHUB_PAT GitHub GITLAB_PAT GitLab. create tokens refer GitHub API GitLab API documentation. creating tokens asked set access scopes tokens. GitStats work need tokens given scopes: [GitHub] public_repo, read:org read:user, [GitLab] read_api. access tokens stored environment variables names GITHUB_PAT GITHUB_PAT_* GITLAB_PAT GITLAB_PAT_* need specify set_*_host() functions, GitStats automatically find .","code":"git_stats <- create_gitstats() %>%   set_github_host(     orgs = c(\"r-world-devs\", \"openpharma\")   ) %>%   set_gitlab_host(     orgs = c(\"mbtests\")   )"},{"path":"https://r-world-devs.github.io/GitStats/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maciej Banas. Author, maintainer. Kamil Koziej. Author. Karolina Marcinkowska. Author. Matt Secrest. Author.","code":""},{"path":"https://r-world-devs.github.io/GitStats/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Banas M, Koziej K, Marcinkowska K, Secrest M (2024). GitStats: Get Statistics GitHub GitLab. R package version 2.1.0, https://github.com/r-world-devs/GitStats, https://r-world-devs.github.io/GitStats/.","code":"@Manual{,   title = {GitStats: Get Statistics from GitHub and GitLab},   author = {Maciej Banas and Kamil Koziej and Karolina Marcinkowska and Matt Secrest},   year = {2024},   note = {R package version 2.1.0, https://github.com/r-world-devs/GitStats},   url = {https://r-world-devs.github.io/GitStats/}, }"},{"path":"https://r-world-devs.github.io/GitStats/index.html","id":"gitstats-","dir":"","previous_headings":"","what":"Get Statistics from GitHub and GitLab","title":"Get Statistics from GitHub and GitLab","text":"GitStats can pull git data uniform way (table format) GitHub GitLab. time-can get data : repositories, commits, users, release logs, repository files structure, text files content, R package usage.","code":""},{"path":"https://r-world-devs.github.io/GitStats/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Get Statistics from GitHub and GitLab","text":"","code":"devtools::install_github(\"r-world-devs/GitStats\")"},{"path":"https://r-world-devs.github.io/GitStats/index.html","id":"gitstats-workflow","dir":"","previous_headings":"","what":"GitStats workflow","title":"Get Statistics from GitHub and GitLab","text":"use GitStats, refer documentation.","code":""},{"path":"https://r-world-devs.github.io/GitStats/index.html","id":"acknowledgement","dir":"","previous_headings":"","what":"Acknowledgement","title":"Get Statistics from GitHub and GitLab","text":"Special thanks James Black, Karolina Marcinkowska, Kamil Koziej, Matt Secrest, Krystian Igras, Kamil Wais, Adam Forys - support package development.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/create_gitstats.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a GitStats object — create_gitstats","title":"Create a GitStats object — create_gitstats","text":"Create GitStats object","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/create_gitstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a GitStats object — create_gitstats","text":"","code":"create_gitstats()"},{"path":"https://r-world-devs.github.io/GitStats/reference/create_gitstats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a GitStats object — create_gitstats","text":"GitStats object.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/create_gitstats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a GitStats object — create_gitstats","text":"","code":"my_gitstats <- create_gitstats()"},{"path":"https://r-world-devs.github.io/GitStats/reference/get_R_package_usage.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data on package usage across repositories — get_R_package_usage","title":"Get data on package usage across repositories — get_R_package_usage","text":"Wrapper searching repositories code blobs related loading package (library(package) require(package) files) using dependency (package DESCRIPTION NAMESPACE files).","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_R_package_usage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data on package usage across repositories — get_R_package_usage","text":"","code":"get_R_package_usage(   gitstats_object,   package_name,   only_loading = FALSE,   cache = TRUE,   verbose = is_verbose(gitstats_object) )"},{"path":"https://r-world-devs.github.io/GitStats/reference/get_R_package_usage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data on package usage across repositories — get_R_package_usage","text":"gitstats_object GitStats object. package_name character, name package. only_loading boolean, TRUE function check package loaded repositories, used dependencies. cache logical, set TRUE GitStats retrieve last result storage. verbose logical, TRUE default. FALSE messages printing output switched .","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_R_package_usage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data on package usage across repositories — get_R_package_usage","text":"data.frame.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_R_package_usage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get data on package usage across repositories — get_R_package_usage","text":"","code":"if (FALSE) { # \\dontrun{  my_gitstats <- create_gitstats() %>%   set_github_host(     token = Sys.getenv(\"GITHUB_PAT\"),     orgs = c(\"r-world-devs\", \"openpharma\")   )   get_R_package_usage(my_gitstats, \"Shiny\") } # }"},{"path":"https://r-world-devs.github.io/GitStats/reference/get_commits.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data on commits — get_commits","title":"Get data on commits — get_commits","text":"List commits repositories organization vector repositories.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_commits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data on commits — get_commits","text":"","code":"get_commits(   gitstats_object,   since = NULL,   until = NULL,   cache = TRUE,   verbose = is_verbose(gitstats_object),   progress = verbose )"},{"path":"https://r-world-devs.github.io/GitStats/reference/get_commits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data on commits — get_commits","text":"gitstats_object GitStats object. since starting date. end date. cache logical, set TRUE GitStats retrieve last result storage. verbose logical, TRUE default. FALSE messages printing output switched . progress logical, default set verbose value. FALSE cli progress bar displayed.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_commits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data on commits — get_commits","text":"data.frame.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_commits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get data on commits — get_commits","text":"","code":"if (FALSE) { # \\dontrun{ my_gitstats <- create_gitstats() %>%   set_github_host(     token = Sys.getenv(\"GITHUB_PAT\"),     repos = c(\"openpharma/DataFakeR\", \"openpharma/visR\")   ) %>%   set_gitlab_host(     token = Sys.getenv(\"GITLAB_PAT_PUBLIC\"),     orgs = \"mbtests\"   )  get_commits(my_gitstats, since = \"2018-01-01\") } # }"},{"path":"https://r-world-devs.github.io/GitStats/reference/get_commits_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Get commits statistics — get_commits_stats","title":"Get commits statistics — get_commits_stats","text":"Prepare statistics pulled commits data.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_commits_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get commits statistics — get_commits_stats","text":"","code":"get_commits_stats(gitstats_object, time_interval = c(\"month\", \"day\", \"week\"))"},{"path":"https://r-world-devs.github.io/GitStats/reference/get_commits_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get commits statistics — get_commits_stats","text":"gitstats_object GitStats class object. time_interval character, specifying time interval show statistics.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_commits_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get commits statistics — get_commits_stats","text":"table commits_stats class.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_commits_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get commits statistics — get_commits_stats","text":"make function work, need first get commits data GitStats. See examples section.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_commits_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get commits statistics — get_commits_stats","text":"","code":"if (FALSE) { # \\dontrun{  my_gitstats <- create_gitstats() %>%    set_github_host(      token = Sys.getenv(\"GITHUB_PAT\"),      repos = c(\"r-world-devs/GitStats\", \"openpharma/visR\")    )  get_commits(my_gitstats, since = \"2022-01-01\")  get_commits_stats(my_gitstats, time_interval = \"week\") } # }"},{"path":"https://r-world-devs.github.io/GitStats/reference/get_files_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Get content of files — get_files_content","title":"Get content of files — get_files_content","text":"Pull text files content given scope (orgs, repos whole git hosts).","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_files_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get content of files — get_files_content","text":"","code":"get_files_content(   gitstats_object,   file_path = NULL,   use_files_structure = TRUE,   only_text_files = TRUE,   cache = TRUE,   verbose = is_verbose(gitstats_object),   progress = verbose )"},{"path":"https://r-world-devs.github.io/GitStats/reference/get_files_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get content of files — get_files_content","text":"gitstats_object GitStats object. file_path Optional. standardized path file(s) repositories. May character vector multiple files pulled. set NULL use_files_structure parameter set TRUE, GitStats try pull data files_structure (see ). use_files_structure Logical. TRUE file_path set NULL, iterate files_structure pulled get_files_structure() function kept storage. files_structure storage, error returned. file_path defined, override use_files_structure parameter. only_text_files logical, TRUE default. set FALSE, apart files text content shows table output also non-text files NA value text content. cache logical, set TRUE GitStats retrieve last result storage. verbose logical, TRUE default. FALSE messages printing output switched . progress logical, default set verbose value. FALSE cli progress bar displayed.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_files_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get content of files — get_files_content","text":"data.frame.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_files_content.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get content of files — get_files_content","text":"","code":"if (FALSE) { # \\dontrun{  my_gitstats <- create_gitstats() %>%   set_github_host(     token = Sys.getenv(\"GITHUB_PAT\"),     orgs = c(\"r-world-devs\")   ) %>%   set_gitlab_host(     token = Sys.getenv(\"GITLAB_PAT_PUBLIC\"),     orgs = \"mbtests\"   )  get_files_content(    gitstats_obj = my_gitstats,    file_path = c(\"LICENSE\", \"DESCRIPTION\")  )   # example with files structure  files_structure <- get_files_structure(    gitstats_obj = my_gitstats,    pattern = \"\\\\.Rmd\",    depth = 2L  )  # get_files_content() will make use of pulled earlier files structure  files_content <- get_files_content(    gitstats_obj = my_gitstats  ) } # }"},{"path":"https://r-world-devs.github.io/GitStats/reference/get_files_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Get structure of files — get_files_structure","title":"Get structure of files — get_files_structure","text":"Pulls file structure given repository.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_files_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get structure of files — get_files_structure","text":"","code":"get_files_structure(   gitstats_object,   pattern = NULL,   depth = Inf,   cache = TRUE,   verbose = is_verbose(gitstats_object),   progress = verbose )"},{"path":"https://r-world-devs.github.io/GitStats/reference/get_files_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get structure of files — get_files_structure","text":"gitstats_object GitStats object. pattern optional regular expression. defined, pulls file structure repository matching pattern. depth optional integer. Defines level directories retrieve files . E.g. set 0, pull files root, 1, take data root directory directories visible root directory. left argument, pull files directories. cache logical, set TRUE GitStats retrieve last result storage. verbose logical, TRUE default. FALSE messages printing output switched . progress logical, default set verbose value. FALSE cli progress bar displayed.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_files_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get structure of files — get_files_structure","text":"list vectors.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_files_structure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get structure of files — get_files_structure","text":"","code":"if (FALSE) { # \\dontrun{  my_gitstats <- create_gitstats() %>%   set_github_host(     token = Sys.getenv(\"GITHUB_PAT\"),     orgs = c(\"r-world-devs\")   ) %>%   set_gitlab_host(     token = Sys.getenv(\"GITLAB_PAT_PUBLIC\"),     orgs = \"mbtests\"   )  get_files_structure(    gitstats_obj = my_gitstats,    pattern = \"\\\\.md\"  ) } # }"},{"path":"https://r-world-devs.github.io/GitStats/reference/get_release_logs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get release logs — get_release_logs","title":"Get release logs — get_release_logs","text":"Pull release logs repositories.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_release_logs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get release logs — get_release_logs","text":"","code":"get_release_logs(   gitstats_object,   since = NULL,   until = NULL,   cache = TRUE,   verbose = is_verbose(gitstats_object),   progress = verbose )"},{"path":"https://r-world-devs.github.io/GitStats/reference/get_release_logs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get release logs — get_release_logs","text":"gitstats_object GitStats object. since starting date. end date. cache logical, set TRUE GitStats retrieve last result storage. verbose logical, TRUE default. FALSE messages printing output switched . progress logical, default set verbose value. FALSE cli progress bar displayed.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_release_logs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get release logs — get_release_logs","text":"data.frame.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_release_logs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get release logs — get_release_logs","text":"","code":"if (FALSE) { # \\dontrun{  my_gitstats <- create_gitstats() %>%   set_github_host(     token = Sys.getenv(\"GITHUB_PAT\"),     orgs = c(\"r-world-devs\", \"openpharma\")   )   get_release_logs(my_gistats, since = \"2024-01-01\") } # }"},{"path":"https://r-world-devs.github.io/GitStats/reference/get_repos.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data on repositories — get_repos","title":"Get data on repositories — get_repos","text":"Pulls data repositories organization given text code blobs (with_code parameter) file (with_files parameter) parse table format.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_repos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data on repositories — get_repos","text":"","code":"get_repos(   gitstats_object,   add_contributors = TRUE,   with_code = NULL,   in_files = NULL,   with_files = NULL,   cache = TRUE,   verbose = is_verbose(gitstats_object),   progress = verbose )"},{"path":"https://r-world-devs.github.io/GitStats/reference/get_repos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data on repositories — get_repos","text":"gitstats_object GitStats object. add_contributors logical parameter decide whether add information repositories' contributors repositories output (table). set FALSE makes function run faster , case org search mode, reaches GraphQL endpoint query repositories, case code search mode reaches repositories REST API endpoint. However, pitfall result convey information contributors.  set TRUE (default), GitStats iterates additionally pulled repositories reaches contributors APIs, makes slower, gives additional information. with_code character vector, defined, GitStats pull repositories specified code phrases code blobs. in_files character vector file names. Works with_code set - searches code blobs files passed in_files parameter. with_files character vector, defined, GitStats pull repositories specified files. cache logical, set TRUE GitStats retrieve last result storage. verbose logical, TRUE default. FALSE messages printing output switched . progress logical, default set verbose value. FALSE cli progress bar displayed.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_repos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data on repositories — get_repos","text":"data.frame.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_repos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get data on repositories — get_repos","text":"","code":"if (FALSE) { # \\dontrun{ my_gitstats <- create_gitstats() %>%   set_github_host(     token = Sys.getenv(\"GITHUB_PAT\"),     orgs = c(\"r-world-devs\", \"openpharma\")   ) %>%   set_gitlab_host(     token = Sys.getenv(\"GITLAB_PAT_PUBLIC\"),     orgs = \"mbtests\"   ) get_repos(my_gitstats) get_repos(my_gitstats, add_contributors = FALSE) get_repos(my_gitstats, with_code = \"Shiny\", in_files = \"renv.lock\") get_repos(my_gitstats, with_files = \"DESCRIPTION\") } # }"},{"path":"https://r-world-devs.github.io/GitStats/reference/get_repos_urls.html","id":null,"dir":"Reference","previous_headings":"","what":"Get repository URLS — get_repos_urls","title":"Get repository URLS — get_repos_urls","text":"Pulls vector repositories URLs (web API): either organization given text code blobs (with_code parameter) file (with_files parameter).","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_repos_urls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get repository URLS — get_repos_urls","text":"","code":"get_repos_urls(   gitstats_object,   type = \"web\",   with_code = NULL,   in_files = NULL,   with_files = NULL,   cache = TRUE,   verbose = is_verbose(gitstats_object),   progress = verbose )"},{"path":"https://r-world-devs.github.io/GitStats/reference/get_repos_urls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get repository URLS — get_repos_urls","text":"gitstats_object GitStats object. type character, choose api web (html) URLs returned. with_code character vector, defined, GitStats pull repositories specified code phrases code blobs. in_files character vector file names. Works with_code set - searches code blobs files passed in_files parameter. with_files character vector, defined, GitStats pull repositories specified files. cache logical, set TRUE GitStats retrieve last result storage. verbose logical, TRUE default. FALSE messages printing output switched . progress logical, default set verbose value. FALSE cli progress bar displayed.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_repos_urls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get repository URLS — get_repos_urls","text":"character vector.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_repos_urls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get repository URLS — get_repos_urls","text":"","code":"if (FALSE) { # \\dontrun{ my_gitstats <- create_gitstats() %>%   set_github_host(     token = Sys.getenv(\"GITHUB_PAT\"),     orgs = c(\"r-world-devs\", \"openpharma\")   ) %>%   set_gitlab_host(     token = Sys.getenv(\"GITLAB_PAT_PUBLIC\"),     orgs = \"mbtests\"   ) get_repos_urls(my_gitstats, type = \"api\") get_repos_urls(my_gitstats, with_files = c(\"DESCRIPTION\", \"LICENSE\")) } # }"},{"path":"https://r-world-devs.github.io/GitStats/reference/get_users.html","id":null,"dir":"Reference","previous_headings":"","what":"Get users data — get_users","title":"Get users data — get_users","text":"Get users data","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_users.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get users data — get_users","text":"","code":"get_users(   gitstats_object,   logins,   cache = TRUE,   verbose = is_verbose(gitstats_object) )"},{"path":"https://r-world-devs.github.io/GitStats/reference/get_users.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get users data — get_users","text":"gitstats_object GitStats object. logins character vector logins. cache logical, set TRUE GitStats retrieve last result storage. verbose logical, TRUE default. FALSE messages printing output switched .","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_users.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get users data — get_users","text":"data.frame.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/get_users.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get users data — get_users","text":"","code":"if (FALSE) { # \\dontrun{  my_gitstats <- create_gitstats() %>%   set_github_host(     token = Sys.getenv(\"GITHUB_PAT\"),     orgs = c(\"r-world-devs\")   ) %>%   set_gitlab_host(     token = Sys.getenv(\"GITLAB_PAT_PUBLIC\"),     orgs = \"mbtests\"   )  get_users(my_gitstats, c(\"maciekabanas\", \"marcinkowskak\")) } # }"},{"path":"https://r-world-devs.github.io/GitStats/reference/is_verbose.html","id":null,"dir":"Reference","previous_headings":"","what":"Is verbose mode switched on — is_verbose","title":"Is verbose mode switched on — is_verbose","text":"verbose mode switched ","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/is_verbose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is verbose mode switched on — is_verbose","text":"","code":"is_verbose(gitstats_object)"},{"path":"https://r-world-devs.github.io/GitStats/reference/is_verbose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is verbose mode switched on — is_verbose","text":"gitstats_object GitStats object.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://r-world-devs.github.io/GitStats/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/set_github_host.html","id":null,"dir":"Reference","previous_headings":"","what":"Set GitHub host — set_github_host","title":"Set GitHub host — set_github_host","text":"Set GitHub host","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/set_github_host.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set GitHub host — set_github_host","text":"","code":"set_github_host(   gitstats_object,   host = NULL,   token = NULL,   orgs = NULL,   repos = NULL,   verbose = is_verbose(gitstats_object) )"},{"path":"https://r-world-devs.github.io/GitStats/reference/set_github_host.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set GitHub host — set_github_host","text":"gitstats_object GitStats object. host character, optional, URL name host. passed, public host used. token token. orgs optional character vector organisations. pass , repos parameter stay NULL. repos optional character vector repositories full names (organization repository name, e.g. \"r-world-devs/GitStats\"). pass , orgs parameter stay NULL. verbose logical, TRUE default. FALSE messages printing output switched .","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/set_github_host.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set GitHub host — set_github_host","text":"GitStats object added information host.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/set_github_host.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set GitHub host — set_github_host","text":"define orgs repos, GitStats set scan whole Git platform (enterprise version GitHub GitLab), unless public platform. case public one (like GitHub) need define orgs repos scanning organizations may take large amount time.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/set_github_host.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set GitHub host — set_github_host","text":"","code":"if (FALSE) { # \\dontrun{ my_gitstats <- create_gitstats() %>%   set_github_host(     orgs = c(\"r-world-devs\", \"openpharma\", \"pharmaverse\")   ) } # }"},{"path":"https://r-world-devs.github.io/GitStats/reference/set_gitlab_host.html","id":null,"dir":"Reference","previous_headings":"","what":"Set GitLab host — set_gitlab_host","title":"Set GitLab host — set_gitlab_host","text":"Set GitLab host","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/set_gitlab_host.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set GitLab host — set_gitlab_host","text":"","code":"set_gitlab_host(   gitstats_object,   host = NULL,   token = NULL,   orgs = NULL,   repos = NULL,   verbose = is_verbose(gitstats_object) )"},{"path":"https://r-world-devs.github.io/GitStats/reference/set_gitlab_host.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set GitLab host — set_gitlab_host","text":"gitstats_object GitStats object. host character, optional, URL name host. passed, public host used. token token. orgs optional character vector organisations. pass , repos parameter stay NULL. repos optional character vector repositories full names (organization repository name, e.g. \"r-world-devs/GitStats\"). pass , orgs parameter stay NULL. verbose logical, TRUE default. FALSE messages printing output switched .","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/set_gitlab_host.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set GitLab host — set_gitlab_host","text":"GitStats object added information host.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/set_gitlab_host.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set GitLab host — set_gitlab_host","text":"define orgs repos, GitStats set scan whole Git platform (enterprise version GitHub GitLab), unless public platform. case public one (like GitHub) need define orgs repos scanning organizations may take large amount time.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/set_gitlab_host.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set GitLab host — set_gitlab_host","text":"","code":"if (FALSE) { # \\dontrun{ my_gitstats <- create_gitstats() %>%   set_gitlab_host(     token = Sys.getenv(\"GITLAB_PAT_PUBLIC\"),     orgs = \"mbtests\"   ) } # }"},{"path":"https://r-world-devs.github.io/GitStats/reference/show_orgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Show organizations set in GitStats — show_orgs","title":"Show organizations set in GitStats — show_orgs","text":"Retrieves organizations set pulled GitStats. Especially helpful user scanning whole git platform wants glimpse organizations.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/show_orgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show organizations set in GitStats — show_orgs","text":"","code":"show_orgs(gitstats_object)"},{"path":"https://r-world-devs.github.io/GitStats/reference/show_orgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show organizations set in GitStats — show_orgs","text":"gitstats_object GitStats object.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/show_orgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show organizations set in GitStats — show_orgs","text":"vector organizations.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/verbose_off.html","id":null,"dir":"Reference","previous_headings":"","what":"Switch off verbose mode — verbose_off","title":"Switch off verbose mode — verbose_off","text":"Stop printing messages output.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/verbose_off.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Switch off verbose mode — verbose_off","text":"","code":"verbose_off(gitstats_object)"},{"path":"https://r-world-devs.github.io/GitStats/reference/verbose_off.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Switch off verbose mode — verbose_off","text":"gitstats_object GitStats object.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/verbose_off.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Switch off verbose mode — verbose_off","text":"GitStats object.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/verbose_on.html","id":null,"dir":"Reference","previous_headings":"","what":"Switch on verbose mode — verbose_on","title":"Switch on verbose mode — verbose_on","text":"Print messages output.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/verbose_on.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Switch on verbose mode — verbose_on","text":"","code":"verbose_on(gitstats_object)"},{"path":"https://r-world-devs.github.io/GitStats/reference/verbose_on.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Switch on verbose mode — verbose_on","text":"gitstats_object GitStats object.","code":""},{"path":"https://r-world-devs.github.io/GitStats/reference/verbose_on.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Switch on verbose mode — verbose_on","text":"GitStats object.","code":""},{"path":[]},{"path":"https://r-world-devs.github.io/GitStats/news/index.html","id":"new-features-2-1-0","dir":"Changelog","previous_headings":"","what":"New features:","title":"GitStats 2.1.0","text":"Added new get_files_structure() function pull files structure given repository possibility control level directories (depth parameter) limit output files matching regex argument passed pattern parameter (#338). Together , get_files() function renamed get_files_content() better reflect purpose. Adjusted get_files_content() can make use files_structure pulled GitStats storage get_files_structure() function - file_path set NULL use_files_structure() parameter TRUE (default)(#467). Added progress parameter user functions control showing cli progress bar separately messages (controlled verbose) (#465).","code":""},{"path":"https://r-world-devs.github.io/GitStats/news/index.html","id":"other-2-1-0","dir":"Changelog","previous_headings":"","what":"Other:","title":"GitStats 2.1.0","text":"Changed message searching scope set scan whole git host (orgs repos specified) warning info (#456). Added new CI/CD jobs: deploy gh-pages, lint check bumping version. Mocked extensively API responses improve tests checks progress (#481].","code":""},{"path":"https://r-world-devs.github.io/GitStats/news/index.html","id":"gitstats-202","dir":"Changelog","previous_headings":"","what":"GitStats 2.0.2","title":"GitStats 2.0.2","text":"patch release substantial improvements functions (get_repos(), get_files() get_R_package_usage()), adding with_files in_files parameters, fixing cache feature introducing new get_repos_urls() function, minimalist version get_repos(): Added new get_repos_urls() function fetch repository URLs (either web API - choose type parameter). may return also repository URLs consist given file files (passing argument with_files parameter) text code blobs (with_code parameter). minimalist version get_repos(), takes process parsing (search response repositories one) adding statistics repositories. makes poorer content faster. (#425). Added with_files parameter get_repos() function, makes possible search repositories given file files return full output repositories. also possible now pass multiple code phrases with_code parameter (character vector) get_repos() get_repos_urls() (282). Added in_files parameter get_repos() works with_code parameter. defined, GitStats searches code blobs given files. Removed dplyr::glimpse() get_*() functions, printing console get_*() function assigned object (#426). Output table get_R_package_usage() consists now also repository full name (#438). Improved get_R_package_usage() optimizing search package names DESCRIPTION NAMESPACE files removing filtering method replacing filename: filter directly search endpoint query (#428). Fixed get_files() scanning scope set repositories. Earlier, pulled given files whole organizations, even scanning scope set repos set_*_host(). Now shows files given repositories (#439). Improved cache feature (#436). verbose parameter controls now showing progress bars (#453).","code":""},{"path":"https://r-world-devs.github.io/GitStats/news/index.html","id":"gitstats-201","dir":"Changelog","previous_headings":"","what":"GitStats 2.0.1","title":"GitStats 2.0.1","text":"patch release hot issues needed addressed, notably covering set_*_host() functions verbose control, tweaking bit verbose feature general, fixing pulling data GitLab subgroups speeding get_files() function.","code":""},{"path":"https://r-world-devs.github.io/GitStats/news/index.html","id":"features-2-0-1","dir":"Changelog","previous_headings":"","what":"Features:","title":"GitStats 2.0.1","text":"Getting files feature sped GitStats set scan whole hosts, switching Search API instead pulling files via GraphQL (iteration organizations repositories) (#411). setting hosts scanned whole (without specifying orgs repos) GitStats pull organizations. Pulling organizations host triggered user decides pull repositories organizations. decides, e.g. pull repositories code, need pull organizations (may time consuming process), GitStats uses Search API (#393). now possible mute messages also set_*_host() functions verbose_off() verbose parameter (#413). Setting verbose FALSE lead hiding output get_*() functions - .e. glimpse table always appear pulling data, even verbose switched . verbose parameter serves now purpose show hide messages user (#423).","code":""},{"path":"https://r-world-devs.github.io/GitStats/news/index.html","id":"fixes-2-0-1","dir":"Changelog","previous_headings":"","what":"Fixes:","title":"GitStats 2.0.1","text":"Pulling repositories GitLab subgroups fixed. work, URL group (org) passed GraphQL API way REST API, .e. URL sign (“%2F”, instead “/”). GitStats returns now proper error, pass wrong host URL set_*_host() function (#415)","code":""},{"path":"https://r-world-devs.github.io/GitStats/news/index.html","id":"gitstats-200","dir":"Changelog","previous_headings":"","what":"GitStats 2.0.0","title":"GitStats 2.0.0","text":"major release general changes workflow (simplifying ), changes setting GitStats hosts, deprecation useful features (like plots, setting parameters separately) new get_release_logs() function.","code":""},{"path":"https://r-world-devs.github.io/GitStats/news/index.html","id":"setting-hosts-2-0-0","dir":"Changelog","previous_headings":"","what":"Setting hosts:","title":"GitStats 2.0.0","text":"set_host() function replaced explicit set_github_host() set_gitlab_host()(#373). wish connect public host (e.g. api.github.com), need pass argument host parameter.","code":""},{"path":"https://r-world-devs.github.io/GitStats/news/index.html","id":"simplifying-workflow-2-0-0","dir":"Changelog","previous_headings":"","what":"Simplifying workflow:","title":"GitStats 2.0.0","text":"GitStats workflow now simplified. pull data repositories, commits, R_package_usage use directly corresponding get_*() functions instead pull_*() deprecated. get_*() functions pull data API, parse table, add goodies (additional columns) needed return table instead GitStats object, opinion intuitive user-friendly (#345). means need run pipe two three additional function calls , e.g. pull_repos(gitstats_object) %>% get_repos() %>% get_repos_stats(), just run get_repos(gitstats_object) get data need. Moreover, run second time get_*() function GitStats pull data storage API first time, unless change parameters function (e.g. starting date since get_commits()) change directly cache parameter function. (#333) pull_repos_contributors() separate function deprecated. parameter add_contributors now set default TRUE get_repos() seems reasonable user gets data. get_commits() old parameters (date_from date_until) replaced new, concise (since ).","code":""},{"path":"https://r-world-devs.github.io/GitStats/news/index.html","id":"changes-to-setting-parameters-and-pulling-repositories-by-code-2-0-0","dir":"Changelog","previous_headings":"","what":"Changes to setting parameters and pulling repositories by code:","title":"GitStats 2.0.0","text":"set_params() function removed. (#386) Now logic moved straight get_*() functions. example, want pull repositories specific code blob, need define anything set_params() (previously search_mode phrase parameter) just simply run get_repos(with_code = 'your_code'). (#333) New logical parameter verbose introduced limiting messages user pulling data - parameter can set get_*() functions. can also turn verbose mode /globally verbose_on()/verbose_off() functions.","code":""},{"path":"https://r-world-devs.github.io/GitStats/news/index.html","id":"deprecate-2-0-0","dir":"Changelog","previous_headings":"","what":"Deprecate:","title":"GitStats 2.0.0","text":"get_repos_stats() function deprecated role unclear - unlike get_commit_stats() aggregate repositories data new stats table, added new numeric columns, like number contributors (contributors_n) last activity difftime format, now done within get_repos() function. Pulling team filtering language longer supported - features quite heavy package performance bring much added value. user needs, can always filter output (formatted responses pulled API) contributors language. (#384) Plot functions longer feature GitStats, deprecated package meant basically back end purposes field developer’s effort now go (#381). needed requested, plot functions may brought next releases.","code":""},{"path":"https://r-world-devs.github.io/GitStats/news/index.html","id":"new-features-2-0-0","dir":"Changelog","previous_headings":"","what":"New features:","title":"GitStats 2.0.0","text":"Added get_release_logs() (#356). get_orgs() renamed show_orgs() reflect pull data API, shows GitStats object. Commits response consists now two new columns: author_login author_name (#332). due mix GitHub/GitLab handles display names author column (original author name field commits API response). Improve printing GitStats object - now return GitStats object console, prints GitStats data divided sections give readable information user: scanning scope (organizations repositories), storage (output tables stored GitStats basic information dimensions) (#329).","code":""},{"path":"https://r-world-devs.github.io/GitStats/news/index.html","id":"bug-fixes-2-0-0","dir":"Changelog","previous_headings":"","what":"Bug fixes:","title":"GitStats 2.0.0","text":"Pagination introduced contributors response (#331). Fixed handler dates parameters pulling commits. Wrong complex construction gts_to_posixt() helper took dependencies stringr cause users passing empty value since parameter commits endpoint ended Bad Request Error (400) infinite loop retrying response (#360).","code":""},{"path":[]},{"path":"https://r-world-devs.github.io/GitStats/news/index.html","id":"new-features-1-1-0","dir":"Changelog","previous_headings":"","what":"New features:","title":"GitStats 1.1.0","text":"pull_R_package_usage() get_R_package_usage() functions pull repositories package name found DESCRIPTION NAMESPACE files code blobs phrases related using R package (library(package), require(package)) (#326, #341), pull_files() get_files() pull content text files (#200). possibility pass specific repositories GitStats set_host() function using repos parameter instead orgs (#330).","code":""},{"path":"https://r-world-devs.github.io/GitStats/news/index.html","id":"bug-fixes-1-1-0","dir":"Changelog","previous_headings":"","what":"Bug fixes:","title":"GitStats 1.1.0","text":"fixed pulling responses GitLab groups private empty content (#314), fixed pulling users pulling multiple hosts (#312), improved search API error handling.","code":""},{"path":"https://r-world-devs.github.io/GitStats/news/index.html","id":"minor-changes-and-features-1-1-0","dir":"Changelog","previous_headings":"","what":"Minor changes and features:","title":"GitStats 1.1.0","text":"rename column names repository output - id repo_id name repo_name, added default_branch column repositories output consequence #200.","code":""},{"path":[]},{"path":[]},{"path":"https://r-world-devs.github.io/GitStats/news/index.html","id":"new-functions-1-0-0","dir":"Changelog","previous_headings":"Breaking changes:","what":"New functions:","title":"GitStats 1.0.0","text":"added get_*_stats() functions prepare summary stats pulled data: repositories commits (#276), rename refactor plot functions one generic gitstats_plot() takes input repos_stats commits_stats class objects (#276),","code":""},{"path":"https://r-world-devs.github.io/GitStats/news/index.html","id":"new-names-for-core-functions-1-0-0","dir":"Changelog","previous_headings":"Breaking changes:","what":"New names for core functions:","title":"GitStats 1.0.0","text":"changed names get_* pull_*; get_* functions now retrieve already pulled data GitStats object (#294), changed name setup() set_params() (#294), changed name set_connection() set_host() (#271), changed name add_team_member() set_team_member() (#271).","code":""},{"path":[]},{"path":"https://r-world-devs.github.io/GitStats/news/index.html","id":"new-features-1-0-0","dir":"Changelog","previous_headings":"Major changes:","what":"New features:","title":"GitStats 1.0.0","text":"added setting tokens default - user PATs set environment variables (e.g. GITHUB_PAT GITLAB_PAT), need pass argument set_host() (#120), added pull_users() function pull information users (#199), added possibility scanning whole internal git platforms orgs passed (#258), added get_orgs() function print organizations (#283), added resetting settings default reset() function (#270) added resetting language search preferences reset_language() setting language parameter setup() function (#231)","code":""},{"path":"https://r-world-devs.github.io/GitStats/news/index.html","id":"improving-performance-with-rest-and-graphql-apis-1-0-0","dir":"Changelog","previous_headings":"Major changes:","what":"Improving performance with REST and GraphQL APIs:","title":"GitStats 1.0.0","text":"added switching REST engine case GraphQL fails 502 error (#225) added GraphQL engine getting GitLab repositories organization (#218) removed contributors basic stat pulling repos org phrase improve speed pulling repositories data. Added pull_repos_contributors() user function add_contributors parameter pull_repos() function add conditionally information contributors repositories table (#235)","code":""},{"path":"https://r-world-devs.github.io/GitStats/news/index.html","id":"minor-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Minor changes:","title":"GitStats 1.0.0","text":"handled errors proper messages tokens grant access (#242 #301), repositories output set api_url column address repository, host (#201), fixed adding GitLab subgroups (#176), exported pipe operator (%>%) (#289).","code":""},{"path":"https://r-world-devs.github.io/GitStats/news/index.html","id":"gitstats-010","dir":"Changelog","previous_headings":"","what":"GitStats 0.1.0","title":"GitStats 0.1.0","text":"first release GitStats given features: create_gitstats() - creating GitStats object, set_connection() - adding hosts GitStats object, setup() - setting search parameter org, team phrase, setting programming language repositories, get_repos() - pulling repositories GitHub GitLab API standardized table, get_commits() - pulling commits GitHub GitLab API standardized table, set_team_member() - adding team members GitStats object.","code":""}]
