% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_github.R
\name{GitHubClient}
\alias{GitHubClient}
\title{A GitHub API Client class}
\description{
An object with methods to derive information form GitHub API.
}
\section{Super class}{
\code{\link[GitStats:GitClient]{GitStats::GitClient}} -> \code{GitHubClient}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{GitHubClient$new()}}
\item \href{#method-get_repos_by_owner}{\code{GitHubClient$get_repos_by_owner()}}
\item \href{#method-get_repos_by_team}{\code{GitHubClient$get_repos_by_team()}}
\item \href{#method-get_repos_by_codephrase}{\code{GitHubClient$get_repos_by_codephrase()}}
\item \href{#method-get_commits_by_owner}{\code{GitHubClient$get_commits_by_owner()}}
\item \href{#method-get_commits_by_team}{\code{GitHubClient$get_commits_by_team()}}
\item \href{#method-print}{\code{GitHubClient$print()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new \code{GitHubClient} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GitHubClient$new(rest_api_url = NA, gql_api_url = NA, token = NA, owners = NA)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{rest_api_url}}{A url of rest API.}

\item{\code{gql_api_url}}{A url of GraphQL API.}

\item{\code{token}}{A token.}

\item{\code{owners}}{A character vector of owners of repositories.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{GitHubClient} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_repos_by_owner"></a>}}
\if{latex}{\out{\hypertarget{method-get_repos_by_owner}{}}}
\subsection{Method \code{get_repos_by_owner()}}{
A method to list all repositories for an organization.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GitHubClient$get_repos_by_owner(repos_owner = self$owners)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{repos_owner}}{A character vector of repository owners.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.frame of repositories
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_repos_by_team"></a>}}
\if{latex}{\out{\hypertarget{method-get_repos_by_team}{}}}
\subsection{Method \code{get_repos_by_team()}}{
A method to list all repositories
for a team.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GitHubClient$get_repos_by_team(team, repos_owners = self$owners)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{team}}{A list of team members. Specified
by \code{set_team()} method of GitStats class
object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.frame of repositories
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_repos_by_codephrase"></a>}}
\if{latex}{\out{\hypertarget{method-get_repos_by_codephrase}{}}}
\subsection{Method \code{get_repos_by_codephrase()}}{
A method to find repositories with given phrase in codelines.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GitHubClient$get_repos_by_codephrase(phrase, language = "R")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{phrase}}{A phrase to look for in codelines.}

\item{\code{language}}{A character specifying language used in repositories.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.frame of repositories.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_commits_by_owner"></a>}}
\if{latex}{\out{\hypertarget{method-get_commits_by_owner}{}}}
\subsection{Method \code{get_commits_by_owner()}}{
A method to get information on commits.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GitHubClient$get_commits_by_owner(
  owners = self$owners,
  date_from,
  date_until = Sys.time()
)}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A data.frame
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_commits_by_team"></a>}}
\if{latex}{\out{\hypertarget{method-get_commits_by_team}{}}}
\subsection{Method \code{get_commits_by_team()}}{
A method to get information on commits.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GitHubClient$get_commits_by_team(
  team,
  owners = self$owners,
  date_from,
  date_until = Sys.time()
)}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A data.frame
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
A print method for a GitHubClient object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GitHubClient$print()}\if{html}{\out{</div>}}
}

}
}
