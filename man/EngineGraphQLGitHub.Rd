% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EngineGraphQLGitHub.R
\name{EngineGraphQLGitHub}
\alias{EngineGraphQLGitHub}
\title{A EngineGraphQLGitHub class}
\description{
A class for methods wraping GitHub's GraphQL API responses.
}
\section{Super classes}{
\code{\link[GitStats:Engine]{GitStats::Engine}} -> \code{\link[GitStats:EngineGraphQL]{GitStats::EngineGraphQL}} -> \code{EngineGraphQLGitHub}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{EngineGraphQLGitHub$new()}}
\item \href{#method-get_repos_from_org}{\code{EngineGraphQLGitHub$get_repos_from_org()}}
\item \href{#method-get_commits_from_org}{\code{EngineGraphQLGitHub$get_commits_from_org()}}
\item \href{#method-clone}{\code{EngineGraphQLGitHub$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="GitStats" data-topic="EngineGraphQL" data-id="get_repos_by_org">}\href{../../GitStats/html/EngineGraphQL.html#method-get_repos_by_org}{\code{GitStats::EngineGraphQL$get_repos_by_org()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="GitStats" data-topic="EngineGraphQL" data-id="gql_response">}\href{../../GitStats/html/EngineGraphQL.html#method-gql_response}{\code{GitStats::EngineGraphQL$gql_response()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create \code{EngineGraphQLGitHub} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EngineGraphQLGitHub$new(gql_api_url, token)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{gql_api_url}}{GraphQL API url.}

\item{\code{token}}{A token.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_repos_from_org"></a>}}
\if{latex}{\out{\hypertarget{method-get_repos_from_org}{}}}
\subsection{Method \code{get_repos_from_org()}}{
A method to retrieve all repositories for an organization in
a table format.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EngineGraphQLGitHub$get_repos_from_org(org)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org}}{A character, an organization:\itemize{\item{GitHub - owners o
repositories} \item{GitLab - group of projects.}}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_commits_from_org"></a>}}
\if{latex}{\out{\hypertarget{method-get_commits_from_org}{}}}
\subsection{Method \code{get_commits_from_org()}}{
Method to pull all commits from organization, optionally
filtered by team members.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EngineGraphQLGitHub$get_commits_from_org(
  org,
  repos_table,
  date_from,
  date_until,
  by,
  team
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org}}{An organization.}

\item{\code{repos_table}}{A table of repositories.}

\item{\code{date_from}}{A starting date to look commits for.}

\item{\code{date_until}}{An end date to look commits for.}

\item{\code{by}}{A character, 'org' or 'team'.}

\item{\code{team}}{A list of team members.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A table of commits.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EngineGraphQLGitHub$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
