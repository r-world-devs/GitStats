% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GitPlatform.R
\name{GitPlatform}
\alias{GitPlatform}
\title{A Git Service API Client superclass}
\description{
A superclass for GitHub and GitLab classes
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{graphql_engine}}{A GraphQL engine.}

\item{\code{rest_engine}}{A REST engine.}

\item{\code{orgs}}{A character vector of organizations.}

\item{\code{git_service}}{A character specifying whether GitHub or GitLab.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{GitPlatform$new()}}
\item \href{#method-clone}{\code{GitPlatform$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new \code{GitPlatform} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GitPlatform$new(orgs = NA)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{orgs}}{A character vector of organisations (owners of repositories
in case of GitHub and groups of projects in case of GitLab).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{GitPlatform} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GitPlatform$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
