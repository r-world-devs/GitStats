% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EngineRestGitHub.R
\name{EngineRestGitHub}
\alias{EngineRestGitHub}
\title{A EngineRestGitHub class}
\description{
A class for methods wrapping GitHub's REST API responses.
}
\section{Super class}{
\code{\link[GitStats:EngineRest]{GitStats::EngineRest}} -> \code{EngineRestGitHub}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-get_repos}{\code{EngineRestGitHub$get_repos()}}
\item \href{#method-get_repos_supportive}{\code{EngineRestGitHub$get_repos_supportive()}}
\item \href{#method-get_commits}{\code{EngineRestGitHub$get_commits()}}
\item \href{#method-get_commits_supportive}{\code{EngineRestGitHub$get_commits_supportive()}}
\item \href{#method-get_repos_contributors}{\code{EngineRestGitHub$get_repos_contributors()}}
\item \href{#method-clone}{\code{EngineRestGitHub$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="GitStats" data-topic="EngineRest" data-id="check_organizations">}\href{../../GitStats/html/EngineRest.html#method-check_organizations}{\code{GitStats::EngineRest$check_organizations()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="GitStats" data-topic="EngineRest" data-id="initialize">}\href{../../GitStats/html/EngineRest.html#method-initialize}{\code{GitStats::EngineRest$initialize()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="GitStats" data-topic="EngineRest" data-id="response">}\href{../../GitStats/html/EngineRest.html#method-response}{\code{GitStats::EngineRest$response()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_repos"></a>}}
\if{latex}{\out{\hypertarget{method-get_repos}{}}}
\subsection{Method \code{get_repos()}}{
Method to get repositories with phrase in code blobs.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EngineRestGitHub$get_repos(org, settings)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org}}{An organization}

\item{\code{settings}}{A list of  \code{GitStats} settings.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Table of repositories.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_repos_supportive"></a>}}
\if{latex}{\out{\hypertarget{method-get_repos_supportive}{}}}
\subsection{Method \code{get_repos_supportive()}}{
An supportive method to pull repos by org in case GraphQL
Engine breaks.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EngineRestGitHub$get_repos_supportive(org, settings)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org}}{An organization.}

\item{\code{settings}}{A list of  \code{GitStats} settings.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A table of repositories.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_commits"></a>}}
\if{latex}{\out{\hypertarget{method-get_commits}{}}}
\subsection{Method \code{get_commits()}}{
Method to get commits.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EngineRestGitHub$get_commits(org, date_from, date_until = Sys.date(), settings)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org}}{An organization.}

\item{\code{date_from}}{A starting date to look commits for.}

\item{\code{date_until}}{An end date to look commits for.}

\item{\code{settings}}{A list of  \code{GitStats} settings.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
This method is empty as this class does not support pulling
commits - it is done for GitHub via GraphQL. Still the method must
exist as it is called from the GitHost wrapper above.
}

\subsection{Returns}{
A table of commits.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_commits_supportive"></a>}}
\if{latex}{\out{\hypertarget{method-get_commits_supportive}{}}}
\subsection{Method \code{get_commits_supportive()}}{
A suportive method to get commits, run when GraphQL fails.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EngineRestGitHub$get_commits_supportive(
  org,
  date_from,
  date_until = Sys.date(),
  settings
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org}}{An organization of repositories.}

\item{\code{date_from}}{A starting date to look commits for.}

\item{\code{date_until}}{An end date to look commits for.}

\item{\code{settings}}{A list of  \code{GitStats} settings.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A table of commits.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_repos_contributors"></a>}}
\if{latex}{\out{\hypertarget{method-get_repos_contributors}{}}}
\subsection{Method \code{get_repos_contributors()}}{
A method to add information on repository contributors.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EngineRestGitHub$get_repos_contributors(repos_table)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{repos_table}}{A table of repositories.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A table of repositories with added information on contributors.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EngineRestGitHub$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
