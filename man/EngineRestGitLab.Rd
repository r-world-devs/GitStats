% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EngineRestGitLab.R
\name{EngineRestGitLab}
\alias{EngineRestGitLab}
\title{A EngineRestGitLab class}
\description{
A class for methods wrapping GitLab's REST API responses.
}
\section{Super class}{
\code{\link[GitStats:EngineRest]{GitStats::EngineRest}} -> \code{EngineRestGitLab}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{EngineRestGitLab$new()}}
\item \href{#method-check_organizations}{\code{EngineRestGitLab$check_organizations()}}
\item \href{#method-get_repos}{\code{EngineRestGitLab$get_repos()}}
\item \href{#method-get_repos_supportive}{\code{EngineRestGitLab$get_repos_supportive()}}
\item \href{#method-get_repos_contributors}{\code{EngineRestGitLab$get_repos_contributors()}}
\item \href{#method-get_commits}{\code{EngineRestGitLab$get_commits()}}
\item \href{#method-clone}{\code{EngineRestGitLab$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="GitStats" data-topic="EngineRest" data-id="response">}\href{../../GitStats/html/EngineRest.html#method-response}{\code{GitStats::EngineRest$response()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create new \code{EngineRestGitLab} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EngineRestGitLab$new(rest_api_url, token)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{rest_api_url}}{A REST API url.}

\item{\code{token}}{A token.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-check_organizations"></a>}}
\if{latex}{\out{\hypertarget{method-check_organizations}{}}}
\subsection{Method \code{check_organizations()}}{
Check if an organization exists
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EngineRestGitLab$check_organizations(orgs)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{orgs}}{A character vector of organizations}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
orgs or NULL.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_repos"></a>}}
\if{latex}{\out{\hypertarget{method-get_repos}{}}}
\subsection{Method \code{get_repos()}}{
A method to retrieve all repositories for an organization in
a table format.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EngineRestGitLab$get_repos(org, settings)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org}}{A character, a group of projects.}

\item{\code{settings}}{A list of  \code{GitStats} settings.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_repos_supportive"></a>}}
\if{latex}{\out{\hypertarget{method-get_repos_supportive}{}}}
\subsection{Method \code{get_repos_supportive()}}{
An empty method to satisfy engine iterator.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EngineRestGitLab$get_repos_supportive(org, settings)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org}}{An organization.}

\item{\code{settings}}{A list of  \code{GitStats} settings.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Nothing.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_repos_contributors"></a>}}
\if{latex}{\out{\hypertarget{method-get_repos_contributors}{}}}
\subsection{Method \code{get_repos_contributors()}}{
A method to add information on repository contributors.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EngineRestGitLab$get_repos_contributors(repos_table)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{repos_table}}{A table of repositories.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A table of repositories with added information on contributors.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_commits"></a>}}
\if{latex}{\out{\hypertarget{method-get_commits}{}}}
\subsection{Method \code{get_commits()}}{
GitLab private method to derive
commits from repo with REST API.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EngineRestGitLab$get_commits(org, date_from, date_until = Sys.date(), settings)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org}}{A character, a group of projects.}

\item{\code{date_from}}{A starting date to look commits for.}

\item{\code{date_until}}{An end date to look commits for.}

\item{\code{settings}}{A list of  \code{GitStats} settings.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A table of commits.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EngineRestGitLab$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
